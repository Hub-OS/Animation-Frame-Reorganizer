{"mappings":"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","sources":["<anon>","src/index.ts","src/boomsheets-animations.ts","node_modules/quote-unquote/index.js","src/file-loading.ts","src/frame-organizer-workspace.ts","node_modules/bin-pack/index.js","node_modules/bin-pack/packer.growing.js","src/group-frames.ts","src/rect.ts","src/input-sheets.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $cbdf17c3d09bc906$export$863d7ca51b416cee;\nvar $cbdf17c3d09bc906$export$7b3cbda67be88f5f;\nvar $cbdf17c3d09bc906$export$ee7a15c61bfdeb11;\nvar $cbdf17c3d09bc906$export$f0199846ca09d4f9;\nvar $cbdf17c3d09bc906$var$single = $cbdf17c3d09bc906$export$863d7ca51b416cee = function(s) {\n    return \"'\" + s.replace(/\\\\|'/g, function(m) {\n        return \"\\\\\" + m;\n    }) + \"'\";\n};\nvar $cbdf17c3d09bc906$var$double = $cbdf17c3d09bc906$export$7b3cbda67be88f5f = function(s) {\n    return '\"' + s.replace(/\\\\|\"/g, function(m) {\n        return \"\\\\\" + m;\n    }) + '\"';\n};\n$cbdf17c3d09bc906$export$ee7a15c61bfdeb11 = function(s) {\n    return /'/.test(s) ? $cbdf17c3d09bc906$var$double(s) : $cbdf17c3d09bc906$var$single(s);\n};\n$cbdf17c3d09bc906$export$f0199846ca09d4f9 = function(s) {\n    var quote = s[0];\n    var single = quote === \"'\";\n    return s.substring(1, s.length - 1).replace(/\\\\\\\\/g, \"\\\\\").replace(single ? /\\\\'/g : /\\\\\"/g, quote);\n};\n\n\nconst $fdfd340aa13d9aca$var$nonSpaceRegex = /\\S/g;\nconst $fdfd340aa13d9aca$var$keyEndRegex = /[\\s=]/g;\nfunction $fdfd340aa13d9aca$var$matchGRegexFrom(text, regex, index) {\n    regex.lastIndex = index;\n    return regex.exec(text);\n}\nfunction $fdfd340aa13d9aca$var$stringCharIsEscaped(text, index) {\n    let escaped = false;\n    while(index > 0){\n        index -= 1;\n        if (text[index] != \"\\\\\") break;\n        escaped = !escaped;\n    }\n    return escaped;\n}\nfunction $fdfd340aa13d9aca$var$findClosingQuote(text, index) {\n    // search for non escaped quote\n    while(true){\n        if ((index = text.indexOf('\"', index)) < 0) return -1;\n        if (!$fdfd340aa13d9aca$var$stringCharIsEscaped(text, index)) break;\n        index += 1;\n    }\n    return index;\n}\nfunction $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber) {\n    const attributes = {};\n    let index = line.indexOf(\" \");\n    if (index < 0) // no attributes\n    return attributes;\n    let match;\n    while(match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$nonSpaceRegex, index)){\n        index = match.index;\n        // find key end\n        match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$keyEndRegex, index);\n        if (!match) throw new Error(`Unexpected \"${line.slice(index)}\" on line ${lineNumber}`);\n        const key = line.slice(index, match.index);\n        // find \"=\"\n        const eqIndex = line.indexOf(\"=\", match.index);\n        if (eqIndex < 0) throw new Error(`Attribute is missing \"=\" on line ${lineNumber}`);\n        // find value start\n        match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$nonSpaceRegex, eqIndex + 1);\n        if (!match) throw new Error(`Attribute is missing value on line ${lineNumber}`);\n        // find value end\n        let valueStart = match.index;\n        let value = \"\";\n        if (line[valueStart] == '\"') {\n            // quoted value\n            let valueEnd = $fdfd340aa13d9aca$var$findClosingQuote(line, valueStart + 1);\n            if (valueEnd < 0) throw new Error(`String missing closing quote on line ${lineNumber}`);\n            valueEnd += 1;\n            value = (0, $cbdf17c3d09bc906$export$f0199846ca09d4f9)(line.slice(valueStart, valueEnd));\n            index = valueEnd;\n        } else {\n            // no quotes\n            let valueEnd = line.indexOf(\" \", valueStart);\n            if (valueEnd < 0) valueEnd = line.length;\n            value = line.slice(valueStart, valueEnd);\n            index = valueEnd;\n        }\n        attributes[key] = value;\n    }\n    return attributes;\n}\nfunction $fdfd340aa13d9aca$export$e5a118b8056fd8d9(text) {\n    const animations = [];\n    const boomsheet = {\n        version: \"modern\",\n        animations: animations\n    };\n    let lineNumber = 0;\n    let currentAnimation;\n    let currentFrame;\n    for (let line of text.split(\"\\n\")){\n        line = line.trim();\n        lineNumber += 1;\n        if (line == \"\" || line.startsWith(\"#\") || line.startsWith(\"!\") || line.startsWith(\"imagePath\") || line.startsWith(\"version\")) continue;\n        if (line.startsWith(\"anim \")) {\n            const animation = {\n                state: line.slice(5).trim(),\n                frames: []\n            };\n            animations.push(animation);\n            currentAnimation = animation;\n        } else if (line.startsWith(\"animation \")) {\n            boomsheet.version = \"legacy\";\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            const animation = {\n                state: attributes.state,\n                frames: []\n            };\n            if (!attributes.state) throw new Error(`Animation is missing state name on line ${lineNumber}`);\n            animations.push(animation);\n            currentAnimation = animation;\n        } else if (line.startsWith(\"frame\") || line.startsWith(\"blank\")) {\n            if (!currentAnimation) throw new Error(`No animation state to associate frame with on line ${lineNumber}`);\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            const frame = {\n                x: parseFloat(attributes.x) || 0,\n                y: parseFloat(attributes.y) || 0,\n                w: parseFloat(attributes.w) || 0,\n                h: parseFloat(attributes.h) || 0,\n                originx: parseFloat(attributes.originx) || 0,\n                originy: parseFloat(attributes.originy) || 0,\n                flipx: parseInt(attributes.flipx) == 1,\n                flipy: parseInt(attributes.flipy) == 1,\n                duration: attributes.duration || attributes.dur || \"\",\n                points: []\n            };\n            currentAnimation.frames.push(frame);\n            currentFrame = frame;\n        } else if (line.startsWith(\"point \")) {\n            if (!currentFrame) throw new Error(`No frame to associate point with on line ${lineNumber}`);\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            if (!attributes.label) throw new Error(`Point is missing label on line ${lineNumber}`);\n            const point = {\n                label: attributes.label,\n                x: parseFloat(attributes.x),\n                y: parseFloat(attributes.y)\n            };\n            currentFrame.points.push(point);\n        } else {\n            const wordEnd = line.indexOf(\" \");\n            const word = wordEnd < 0 ? line : line.slice(0, wordEnd);\n            throw new Error(`Unexpected \"${word}\" on line ${lineNumber}`);\n        }\n    }\n    return boomsheet;\n}\nfunction $fdfd340aa13d9aca$var$serializeObject(name, object, options = {\n    quoteAllValues: true\n}) {\n    const text = [\n        name\n    ];\n    for(const key in object){\n        const value = object[key];\n        let renamedKey = key;\n        if (options.renamedKeys) renamedKey = options.renamedKeys[key] || key;\n        switch(typeof value){\n            case \"string\":\n                if (value != \"\") {\n                    text.push(\" \");\n                    text.push(renamedKey);\n                    text.push(\"=\");\n                    if (options.quoteAllValues || value.includes('\"') || value.includes(\" \")) text.push((0, $cbdf17c3d09bc906$export$7b3cbda67be88f5f)(value));\n                    else text.push(value);\n                }\n                break;\n            case \"number\":\n                if (value != 0) {\n                    if (options.quoteAllValues) text.push(` ${renamedKey}=\"${value}\"`);\n                    else text.push(` ${renamedKey}=${value}`);\n                }\n                break;\n            case \"boolean\":\n                if (value == true) {\n                    text.push(\" \");\n                    text.push(renamedKey);\n                    if (options.quoteAllValues) text.push('=\"1\"');\n                    else text.push(\"=1\");\n                }\n                break;\n            case \"object\":\n                if (Array.isArray(value)) break;\n            default:\n                throw new Error(`Unexpected ${typeof value} for ${renamedKey}`);\n        }\n    }\n    return text.join(\"\");\n}\nfunction $fdfd340aa13d9aca$export$fa848666f543bc00(boomsheet) {\n    const lines = [];\n    const options = {\n        quoteAllValues: true\n    };\n    if (boomsheet.version == \"modern\") {\n        options.quoteAllValues = false;\n        options.renamedKeys = {\n            duration: \"dur\"\n        };\n    }\n    for (const animation of boomsheet.animations){\n        if (boomsheet.version == \"modern\") lines.push(\"anim \" + animation.state);\n        else lines.push($fdfd340aa13d9aca$var$serializeObject(\"animation\", animation, options));\n        for (const frame of animation.frames){\n            lines.push($fdfd340aa13d9aca$var$serializeObject(\"frame\", frame, options));\n            for (const point of frame.points)lines.push($fdfd340aa13d9aca$var$serializeObject(\"point\", point, options));\n        }\n        lines.push(\"\");\n    }\n    return lines.join(\"\\n\");\n}\n\n\nfunction $a9cec9f5d2c68d09$export$cc0e7cb90ac4067f(file) {\n    return new Promise((resolve, reject)=>{\n        // load file as data url, then load as image\n        const reader = new FileReader();\n        reader.onload = function() {\n            // load image\n            const image = new Image();\n            image.src = reader.result;\n            image.onload = function() {\n                resolve(image);\n            };\n            image.onerror = function() {\n                reject(new Error(`Failed to load \"${file.name}\"`));\n            };\n        };\n        reader.onerror = function() {\n            reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n        };\n        reader.readAsDataURL(file);\n    });\n}\nfunction $a9cec9f5d2c68d09$export$b4f0996f721d43ec(file) {\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = function() {\n            resolve(reader.result);\n        };\n        reader.onerror = function() {\n            reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n        };\n        reader.readAsText(file);\n    });\n}\n\n\nvar $7bcff58d1f5524c8$exports = {};\n\"use strict\";\nvar $06f5eb59911c96c0$exports = {};\n/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/ var $06f5eb59911c96c0$var$GrowingPacker = function() {};\n$06f5eb59911c96c0$var$GrowingPacker.prototype = {\n    fit: function(blocks) {\n        var n, node, block, len = blocks.length, fit;\n        var width = len > 0 ? blocks[0].width : 0;\n        var height = len > 0 ? blocks[0].height : 0;\n        this.root = {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        };\n        for(n = 0; n < len; n++){\n            block = blocks[n];\n            if (node = this.findNode(this.root, block.width, block.height)) {\n                fit = this.splitNode(node, block.width, block.height);\n                block.x = fit.x;\n                block.y = fit.y;\n            } else {\n                fit = this.growNode(block.width, block.height);\n                block.x = fit.x;\n                block.y = fit.y;\n            }\n        }\n    },\n    findNode: function(root, width, height) {\n        if (root.used) return this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n        else if (width <= root.width && height <= root.height) return root;\n        else return null;\n    },\n    splitNode: function(node, width, height) {\n        node.used = true;\n        node.down = {\n            x: node.x,\n            y: node.y + height,\n            width: node.width,\n            height: node.height - height\n        };\n        node.right = {\n            x: node.x + width,\n            y: node.y,\n            width: node.width - width,\n            height: height\n        };\n        return node;\n    },\n    growNode: function(width, height) {\n        var canGrowDown = width <= this.root.width;\n        var canGrowRight = height <= this.root.height;\n        var shouldGrowRight = canGrowRight && this.root.height >= this.root.width + width; // attempt to keep square-ish by growing right when height is much greater than width\n        var shouldGrowDown = canGrowDown && this.root.width >= this.root.height + height; // attempt to keep square-ish by growing down  when width  is much greater than height\n        if (shouldGrowRight) return this.growRight(width, height);\n        else if (shouldGrowDown) return this.growDown(width, height);\n        else if (canGrowRight) return this.growRight(width, height);\n        else if (canGrowDown) return this.growDown(width, height);\n        else return null; // need to ensure sensible root starting size to avoid this happening\n    },\n    growRight: function(width, height) {\n        this.root = {\n            used: true,\n            x: 0,\n            y: 0,\n            width: this.root.width + width,\n            height: this.root.height,\n            down: this.root,\n            right: {\n                x: this.root.width,\n                y: 0,\n                width: width,\n                height: this.root.height\n            }\n        };\n        var node;\n        if (node = this.findNode(this.root, width, height)) return this.splitNode(node, width, height);\n        else return null;\n    },\n    growDown: function(width, height) {\n        this.root = {\n            used: true,\n            x: 0,\n            y: 0,\n            width: this.root.width,\n            height: this.root.height + height,\n            down: {\n                x: 0,\n                y: this.root.height,\n                width: this.root.width,\n                height: height\n            },\n            right: this.root\n        };\n        var node;\n        if (node = this.findNode(this.root, width, height)) return this.splitNode(node, width, height);\n        else return null;\n    }\n};\n$06f5eb59911c96c0$exports = $06f5eb59911c96c0$var$GrowingPacker;\n\n\n$7bcff58d1f5524c8$exports = function(items, options) {\n    options = options || {};\n    var packer = new $06f5eb59911c96c0$exports();\n    var inPlace = options.inPlace || false;\n    // Clone the items.\n    var newItems = items.map(function(item) {\n        return inPlace ? item : {\n            width: item.width,\n            height: item.height,\n            item: item\n        };\n    });\n    newItems = newItems.sort(function(a, b) {\n        // TODO: check that each actually HAS a width and a height.\n        // Sort based on the size (area) of each block.\n        return b.width * b.height - a.width * a.height;\n    });\n    packer.fit(newItems);\n    var w = newItems.reduce(function(curr, item) {\n        return Math.max(curr, item.x + item.width);\n    }, 0);\n    var h = newItems.reduce(function(curr, item) {\n        return Math.max(curr, item.y + item.height);\n    }, 0);\n    var ret = {\n        width: w,\n        height: h\n    };\n    if (!inPlace) ret.items = newItems;\n    return ret;\n};\n\n\n\nfunction $f2b72c385c32c0e1$export$2afdae6c40900d48(a, b) {\n    const aIsLeft = a.x + a.w <= b.x;\n    const aIsRight = a.x >= b.x + b.w;\n    const aIsAbove = a.y + a.h <= b.y;\n    const aIsBelow = a.y >= b.y + b.h;\n    return !(aIsLeft || aIsRight || aIsAbove || aIsBelow);\n}\nfunction $f2b72c385c32c0e1$export$2b26f95af2147236(rect, x, y) {\n    return x >= rect.x && x < rect.x + rect.w && y >= rect.y && y < rect.y + rect.h;\n}\n\n\nfunction $c85964dfd97e8768$var$updateBounds(group) {\n    const firstFrame = group.frames[0];\n    let minX = firstFrame.x;\n    let minY = firstFrame.y;\n    let maxX = firstFrame.x + firstFrame.w;\n    let maxY = firstFrame.y + firstFrame.h;\n    for(let i = 1; i < group.frames.length; i++){\n        const frame = group.frames[i];\n        minX = Math.min(minX, frame.x);\n        minY = Math.min(minY, frame.y);\n        maxX = Math.max(maxX, frame.x + frame.w);\n        maxY = Math.max(maxY, frame.y + frame.h);\n    }\n    group.x = minX;\n    group.y = minY;\n    group.w = maxX - minX;\n    group.h = maxY - minY;\n}\n// create a single group, removes frames from the passed list\nfunction $c85964dfd97e8768$var$takeGroup(frames) {\n    const group = {\n        x: 0,\n        y: 0,\n        w: 0,\n        h: 0,\n        frames: [\n            frames.pop()\n        ]\n    };\n    $c85964dfd97e8768$var$updateBounds(group);\n    for(let i = frames.length - 1; i >= 0; i--){\n        const frame = frames[i];\n        if (!(0, $f2b72c385c32c0e1$export$2afdae6c40900d48)(group, frame)) continue;\n        if (!group.frames.some((f)=>(0, $f2b72c385c32c0e1$export$2afdae6c40900d48)(f, frame))) continue;\n        // take frame by swap remove\n        frames[i] = frames[frames.length - 1];\n        frames.pop();\n        group.frames.push(frame);\n        $c85964dfd97e8768$var$updateBounds(group);\n    }\n    return group;\n}\nfunction $c85964dfd97e8768$export$21bf01f8bab81bf3(group, x, y) {\n    const shiftX = x - group.x;\n    const shiftY = y - group.y;\n    group.x = x;\n    group.y = y;\n    for (const frame of group.frames){\n        frame.x += shiftX;\n        frame.y += shiftY;\n    }\n}\nfunction $c85964dfd97e8768$export$2e2bcd8739ae039(animations) {\n    const frames = animations.flatMap((animation)=>animation.frames);\n    const groups = [];\n    while(frames.length > 0)groups.push($c85964dfd97e8768$var$takeGroup(frames));\n    return groups;\n}\n\n\n\nclass $240a416b6ffb223f$export$2e2bcd8739ae039 {\n    #originalSheet;\n    #sheet;\n    #frameGroups;\n    #selectedGroups;\n    #canvas;\n    #ctx;\n    #frameCanvas;\n    #frameCtx;\n    #expandingSelection;\n    #mouseDown;\n    #selectionRect;\n    #dragStartX;\n    #dragStartY;\n    constructor(canvas){\n        this.#originalSheet = {};\n        this.#sheet = {};\n        this.#frameGroups = [];\n        this.#selectedGroups = [];\n        this.#expandingSelection = false;\n        this.#mouseDown = false;\n        this.#dragStartX = 0;\n        this.#dragStartY = 0;\n        this.#canvas = canvas;\n        this.#ctx = canvas.getContext(\"2d\");\n        this.#frameCanvas = document.createElement(\"canvas\");\n        this.#frameCtx = this.#frameCanvas.getContext(\"2d\");\n        this.#frameCtx.globalCompositeOperation = \"copy\";\n        let mouseX = 0;\n        let mouseY = 0;\n        const resolveMousePosition = (event)=>{\n            const boundingRect = canvas.getBoundingClientRect();\n            const inverseScale = canvas.width / boundingRect.width;\n            mouseX = Math.floor((event.clientX - boundingRect.left) * inverseScale);\n            mouseY = Math.floor((event.clientY - boundingRect.top) * inverseScale);\n        };\n        this.#canvas.addEventListener(\"mousedown\", (event)=>{\n            resolveMousePosition(event);\n            this.#mouseDown = true;\n            this.#dragStartX = mouseX;\n            this.#dragStartY = mouseY;\n            const selectedExisting = this.#selectedGroups.some(({ work: work })=>(0, $f2b72c385c32c0e1$export$2b26f95af2147236)(work, mouseX, mouseY));\n            if (selectedExisting) this.#expandingSelection = false;\n            else {\n                // redefine selection\n                this.#selectedGroups = this.#frameGroups.filter(({ work: work })=>(0, $f2b72c385c32c0e1$export$2b26f95af2147236)(work, mouseX, mouseY));\n                this.#expandingSelection = this.#selectedGroups.length == 0;\n            }\n            this.render();\n        });\n        document.body.addEventListener(\"mousemove\", (event)=>{\n            if (!this.#mouseDown) return;\n            const lastX = mouseX;\n            const lastY = mouseY;\n            resolveMousePosition(event);\n            if (this.#expandingSelection) {\n                const minX = Math.min(mouseX, this.#dragStartX);\n                const minY = Math.min(mouseY, this.#dragStartY);\n                const maxX = Math.max(mouseX, this.#dragStartX);\n                const maxY = Math.max(mouseY, this.#dragStartY);\n                const rect = {\n                    x: minX,\n                    y: minY,\n                    w: maxX - minX + 1,\n                    h: maxY - minY + 1\n                };\n                this.#selectionRect = rect;\n                this.#selectedGroups = this.#frameGroups.filter(({ work: work })=>(0, $f2b72c385c32c0e1$export$2afdae6c40900d48)(rect, work));\n            } else {\n                const shiftX = mouseX - lastX;\n                const shiftY = mouseY - lastY;\n                this.#shiftSelections(shiftX, shiftY);\n            }\n            this.render();\n        });\n        document.body.addEventListener(\"mouseup\", ()=>{\n            if (this.#mouseDown) {\n                this.#mouseDown = false;\n                this.#selectionRect = undefined;\n                this.render();\n            }\n        });\n        this.#canvas.addEventListener(\"keydown\", (event)=>{\n            let shiftX = 0;\n            let shiftY = 0;\n            switch(event.code){\n                case \"KeyA\":\n                case \"ArrowLeft\":\n                    shiftX -= 1;\n                    break;\n                case \"KeyD\":\n                case \"ArrowRight\":\n                    shiftX += 1;\n                    break;\n                case \"KeyW\":\n                case \"ArrowUp\":\n                    shiftY -= 1;\n                    break;\n                case \"KeyS\":\n                case \"ArrowDown\":\n                    shiftY += 1;\n                    break;\n            }\n            if (shiftX == 0 && shiftY == 0) return;\n            event.preventDefault();\n            if (event.shiftKey) this.#accordionSelections(shiftX, shiftY);\n            else this.#shiftSelections(shiftX, shiftY);\n            this.render();\n        });\n    }\n    #shiftSelections(shiftX, shiftY) {\n        for (const { work: work } of this.#selectedGroups)(0, $c85964dfd97e8768$export$21bf01f8bab81bf3)(work, work.x + shiftX, work.y + shiftY);\n    }\n    #accordionSelections(shiftX, shiftY) {\n        if (this.#selectedGroups.length == 0) return;\n        // x\n        this.#selectedGroups.sort((a, b)=>a.work.x - b.work.x);\n        let lastX = this.#selectedGroups[0].work.x;\n        let currentShiftX = 0;\n        for (const { work: work } of this.#selectedGroups){\n            if (work.x != lastX) {\n                lastX = work.x;\n                currentShiftX += shiftX;\n            }\n            (0, $c85964dfd97e8768$export$21bf01f8bab81bf3)(work, work.x + currentShiftX, work.y);\n        }\n        // y\n        this.#selectedGroups.sort((a, b)=>a.work.y - b.work.y);\n        let lastY = this.#selectedGroups[0].work.y;\n        let currentShiftY = 0;\n        for (const { work: work } of this.#selectedGroups){\n            if (work.y != lastY) {\n                lastY = work.y;\n                currentShiftY += shiftY;\n            }\n            (0, $c85964dfd97e8768$export$21bf01f8bab81bf3)(work, work.x, work.y + currentShiftY);\n        }\n    }\n    loadSheet(sheet) {\n        const sourceImage = sheet.image;\n        // update canvas bounds\n        this.#canvas.width = sourceImage.width;\n        this.#canvas.height = sourceImage.height;\n        // can't use structured clone on image element\n        sheet.image = undefined;\n        this.#originalSheet = sheet;\n        this.#sheet = structuredClone(sheet);\n        // put the image back\n        sheet.image = sourceImage;\n        this.#sheet.image = sourceImage;\n        const groups = (0, $c85964dfd97e8768$export$2e2bcd8739ae039)(this.#sheet.boomsheet.animations);\n        const packed = (0, (/*@__PURE__*/$parcel$interopDefault($7bcff58d1f5524c8$exports)))(groups.map((group)=>({\n                width: group.w + 2,\n                height: group.h + 2,\n                group: group\n            })));\n        this.#frameGroups = [];\n        for (const item of packed.items){\n            const work = item.item.group;\n            const packed = structuredClone(work);\n            (0, $c85964dfd97e8768$export$21bf01f8bab81bf3)(packed, item.x + 1, item.y + 1);\n            this.#frameGroups.push({\n                work: work,\n                packed: packed\n            });\n        }\n        this.#updateFrameSource(packed.width, packed.height);\n        this.render();\n    }\n    #updateFrameSource(width, height) {\n        const sourceImage = this.#sheet.image;\n        // update canvas bounds\n        this.#frameCanvas.width = width;\n        this.#frameCanvas.height = height;\n        // create frame source\n        for (const { work: work, packed: packed } of this.#frameGroups)for(let i = 0; i < packed.frames.length; i++){\n            const sourceFrame = work.frames[i];\n            const destFrame = packed.frames[i];\n            const w = sourceFrame.w;\n            const h = sourceFrame.h;\n            this.#frameCtx.drawImage(sourceImage, sourceFrame.x, sourceFrame.y, w, h, destFrame.x, destFrame.y, w, h);\n        }\n    }\n    unpack() {\n        // can't use structured clone on image element\n        const image = this.#originalSheet.image;\n        this.#originalSheet.image = undefined;\n        this.#sheet = structuredClone(this.#originalSheet);\n        // put the image back\n        this.#sheet.image = image;\n        this.#originalSheet.image = image;\n        if (!this.#sheet.boomsheet) return;\n        // build frame groups and move frames\n        this.#frameGroups = [];\n        for (const animation of this.#sheet.boomsheet.animations)for (const frame of animation.frames){\n            const { x: x, y: y, w: w, h: h } = frame;\n            const work = {\n                x: x,\n                y: y,\n                w: w,\n                h: h,\n                frames: [\n                    frame\n                ]\n            };\n            const packed = structuredClone(work);\n            this.#frameGroups.push({\n                work: work,\n                packed: packed\n            });\n        }\n        if (image) this.#updateFrameSource(image.width, image.height);\n        // move frames\n        let frameGroupIndex = 0;\n        let placeX = 1;\n        let placeY = 1;\n        let nextY = placeY;\n        let width = placeX;\n        for (const animation of this.#sheet.boomsheet.animations){\n            for (const frame of animation.frames){\n                const frameGroup = this.#frameGroups[frameGroupIndex];\n                (0, $c85964dfd97e8768$export$21bf01f8bab81bf3)(frameGroup.work, placeX, placeY);\n                placeX += frame.w + 1;\n                nextY = Math.max(nextY, placeY + frame.h + 1);\n                width = Math.max(width, placeX);\n                frameGroupIndex++;\n            }\n            placeX = 1;\n            placeY = nextY;\n        }\n        // update canvas bounds\n        this.#canvas.width = width;\n        this.#canvas.height = placeY;\n        this.render();\n    }\n    render() {\n        this.#ctx.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n        this.#renderFrames(this.#ctx);\n        this.#renderOutlines();\n    }\n    #renderFrames(ctx) {\n        for (const { work: work, packed: packed } of this.#frameGroups)for(let i = 0; i < packed.frames.length; i++){\n            const sourceFrame = packed.frames[i];\n            const destFrame = work.frames[i];\n            const w = sourceFrame.w;\n            const h = sourceFrame.h;\n            ctx.drawImage(this.#frameCanvas, sourceFrame.x, sourceFrame.y, w, h, destFrame.x, destFrame.y, w, h);\n        }\n    }\n    #renderOutlines() {\n        const ctx = this.#ctx;\n        ctx.strokeStyle = \"lime\";\n        ctx.fillStyle = \"rgba(0, 255, 0, 0.2)\";\n        const renderRect = (x, y, w, h)=>{\n            ctx.beginPath();\n            ctx.rect(x + 0.5, y + 0.5, w, h);\n            ctx.fill();\n            ctx.stroke();\n        };\n        for (const group of this.#frameGroups){\n            ctx.globalAlpha = this.#selectedGroups.includes(group) ? 1.0 : 0.2;\n            const { x: x, y: y, w: w, h: h } = group.work;\n            renderRect(x, y, w - 1, h - 1);\n        }\n        ctx.globalAlpha = 1.0;\n        if (this.#selectionRect) {\n            const { x: x, y: y, w: w, h: h } = this.#selectionRect;\n            renderRect(x, y, w - 1, h - 1);\n        }\n    }\n    renderOutput(canvas) {\n        canvas.width = this.#canvas.width;\n        canvas.height = this.#canvas.height;\n        const ctx = canvas.getContext(\"2d\");\n        this.#renderFrames(ctx);\n    }\n    serializeSheet() {\n        if (this.#sheet.boomsheet) return (0, $fdfd340aa13d9aca$export$fa848666f543bc00)(this.#sheet.boomsheet);\n        else return \"\";\n    }\n}\n\n\nfunction $d56fe29905c32fe3$export$9b2ff4fb61b7dfca(sheet) {\n    if (sheet.animationError) return sheet.animationError;\n    else if (sheet.imageError) return sheet.imageError;\n    else if (!sheet.boomsheet) return \"Missing .animation file\";\n    else if (!sheet.image) return \"Missing image file\";\n}\n\n\nconst $b4e14b6b8da86996$var$canvas = document.querySelector(\"#input canvas\");\nconst $b4e14b6b8da86996$var$workspace = new (0, $240a416b6ffb223f$export$2e2bcd8739ae039)($b4e14b6b8da86996$var$canvas);\nconst $b4e14b6b8da86996$var$pendingSheet = {};\nfunction $b4e14b6b8da86996$var$logError(error) {\n    console.error(error);\n    alert(error);\n}\ndocument.getElementById(\"unpack-button\").onclick = function() {\n    if (confirm(\"Are you sure? This will reorganize every frame and possibly create duplicate frames.\")) $b4e14b6b8da86996$var$workspace.unpack();\n};\ndocument.getElementById(\"bake-button\").onclick = function() {\n    const canvas = document.querySelector(\"#output canvas\");\n    const textarea = document.querySelector(\"#output textarea\");\n    try {\n        $b4e14b6b8da86996$var$workspace.renderOutput(canvas);\n        textarea.value = $b4e14b6b8da86996$var$workspace.serializeSheet();\n    } catch (error) {\n        $b4e14b6b8da86996$var$logError(error);\n    }\n};\ndocument.body.addEventListener(\"dragover\", (event)=>event.preventDefault());\ndocument.body.addEventListener(\"drop\", (event)=>{\n    const items = event.dataTransfer?.items;\n    if (!items) return;\n    event.preventDefault();\n    const files = [];\n    for (const item of items){\n        const file = item.getAsFile();\n        if (file) files.push(file);\n    }\n    $b4e14b6b8da86996$var$loadFiles(files).catch($b4e14b6b8da86996$var$logError).finally(()=>{\n        const errorMessage = (0, $d56fe29905c32fe3$export$9b2ff4fb61b7dfca)($b4e14b6b8da86996$var$pendingSheet);\n        const errorElement = document.querySelector(\"#input .error-text\");\n        errorElement.innerText = errorMessage || \"\";\n        if (!errorMessage) $b4e14b6b8da86996$var$workspace.loadSheet($b4e14b6b8da86996$var$pendingSheet);\n    });\n});\nasync function $b4e14b6b8da86996$var$loadFiles(files) {\n    for (const file of files){\n        if (file.name.endsWith(\".png\")) try {\n            $b4e14b6b8da86996$var$pendingSheet.image = await (0, $a9cec9f5d2c68d09$export$cc0e7cb90ac4067f)(file);\n            $b4e14b6b8da86996$var$pendingSheet.imageError = undefined;\n        } catch (error) {\n            console.error(error);\n            $b4e14b6b8da86996$var$pendingSheet.imageError = error.toString();\n        }\n        else if (file.name.endsWith(\".animation\") || file.name.endsWith(\".anim\")) try {\n            const text = await (0, $a9cec9f5d2c68d09$export$b4f0996f721d43ec)(file);\n            $b4e14b6b8da86996$var$pendingSheet.boomsheet = (0, $fdfd340aa13d9aca$export$e5a118b8056fd8d9)(text);\n            $b4e14b6b8da86996$var$pendingSheet.animationError = undefined;\n        } catch (error) {\n            console.error(error);\n            $b4e14b6b8da86996$var$pendingSheet.animationError = error.toString();\n        }\n    }\n}\n\n\n//# sourceMappingURL=index.b537aabd.js.map\n","import { parseSheet } from \"./boomsheets-animations\";\nimport { loadImageFile, loadTextFile } from \"./file-loading\";\nimport FrameOrganizerWorkspace from \"./frame-organizer-workspace\";\nimport { InputSheet, resolveSingleErrorMessage } from \"./input-sheets\";\n\nconst canvas = document.querySelector(\"#input canvas\") as HTMLCanvasElement;\nconst workspace = new FrameOrganizerWorkspace(canvas);\nconst pendingSheet: InputSheet = {};\n\nfunction logError(error) {\n  console.error(error);\n  alert(error);\n}\n\ndocument.getElementById(\"unpack-button\")!.onclick = function () {\n  if (\n    confirm(\n      \"Are you sure? This will reorganize every frame and possibly create duplicate frames.\"\n    )\n  ) {\n    workspace.unpack();\n  }\n};\n\ndocument.getElementById(\"bake-button\")!.onclick = function () {\n  const canvas = document.querySelector(\"#output canvas\") as HTMLCanvasElement;\n  const textarea = document.querySelector(\n    \"#output textarea\"\n  ) as HTMLTextAreaElement;\n\n  try {\n    workspace.renderOutput(canvas);\n    textarea.value = workspace.serializeSheet();\n  } catch (error) {\n    logError(error);\n  }\n};\n\ndocument.body.addEventListener(\"dragover\", (event) => event.preventDefault());\ndocument.body.addEventListener(\"drop\", (event) => {\n  const items = event.dataTransfer?.items;\n\n  if (!items) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const files: File[] = [];\n\n  for (const item of items) {\n    const file = item.getAsFile();\n\n    if (file) {\n      files.push(file);\n    }\n  }\n\n  loadFiles(files)\n    .catch(logError)\n    .finally(() => {\n      const errorMessage = resolveSingleErrorMessage(pendingSheet);\n\n      const errorElement = document.querySelector(\n        \"#input .error-text\"\n      )! as HTMLDivElement;\n\n      errorElement.innerText = errorMessage || \"\";\n\n      if (!errorMessage) {\n        workspace.loadSheet(pendingSheet);\n      }\n    });\n});\n\nasync function loadFiles(files: File[]) {\n  for (const file of files) {\n    if (file.name.endsWith(\".png\")) {\n      try {\n        pendingSheet.image = await loadImageFile(file);\n        pendingSheet.imageError = undefined;\n      } catch (error) {\n        console.error(error);\n        pendingSheet.imageError = error!.toString();\n      }\n    } else if (\n      file.name.endsWith(\".animation\") ||\n      file.name.endsWith(\".anim\")\n    ) {\n      try {\n        const text = await loadTextFile(file);\n\n        pendingSheet.boomsheet = parseSheet(text);\n        pendingSheet.animationError = undefined;\n      } catch (error) {\n        console.error(error);\n        pendingSheet.animationError = error!.toString();\n      }\n    }\n  }\n}\n","import { double as quote, unquote } from \"quote-unquote\";\n\nexport type BoomSheet = {\n  version: \"legacy\" | \"modern\";\n  animations: BoomSheetsAnimation[];\n};\n\nexport type BoomSheetsPoint = {\n  label: string;\n  x: number;\n  y: number;\n};\n\nexport type BoomSheetsFrame = {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  originx: number;\n  originy: number;\n  flipx: boolean;\n  flipy: boolean;\n  duration: string;\n  points: BoomSheetsPoint[];\n};\n\nexport type BoomSheetsAnimation = {\n  state: string;\n  frames: BoomSheetsFrame[];\n};\n\ntype Attributes = { [key: string]: string };\nconst nonSpaceRegex = /\\S/g;\nconst keyEndRegex = /[\\s=]/g;\n\nfunction matchGRegexFrom(\n  text: string,\n  regex: RegExp,\n  index: number\n): RegExpMatchArray | null {\n  regex.lastIndex = index;\n  return regex.exec(text);\n}\n\nfunction stringCharIsEscaped(text: string, index: number): boolean {\n  let escaped = false;\n\n  while (index > 0) {\n    index -= 1;\n\n    if (text[index] != \"\\\\\") {\n      break;\n    }\n\n    escaped = !escaped;\n  }\n\n  return escaped;\n}\n\nfunction findClosingQuote(text: string, index: number): number {\n  // search for non escaped quote\n  while (true) {\n    if ((index = text.indexOf('\"', index)) < 0) {\n      return -1;\n    }\n\n    if (!stringCharIsEscaped(text, index)) {\n      break;\n    }\n\n    index += 1;\n  }\n\n  return index;\n}\n\nfunction parseAttributes(line: string, lineNumber: number): Attributes {\n  const attributes: Attributes = {};\n\n  let index = line.indexOf(\" \");\n\n  if (index < 0) {\n    // no attributes\n    return attributes;\n  }\n\n  let match: RegExpMatchArray | null;\n\n  while ((match = matchGRegexFrom(line, nonSpaceRegex, index))) {\n    index = match.index!;\n\n    // find key end\n    match = matchGRegexFrom(line, keyEndRegex, index);\n\n    if (!match) {\n      throw new Error(\n        `Unexpected \"${line.slice(index)}\" on line ${lineNumber}`\n      );\n    }\n\n    const key = line.slice(index, match.index!);\n\n    // find \"=\"\n    const eqIndex = line.indexOf(\"=\", match.index);\n\n    if (eqIndex < 0) {\n      throw new Error(`Attribute is missing \"=\" on line ${lineNumber}`);\n    }\n\n    // find value start\n    match = matchGRegexFrom(line, nonSpaceRegex, eqIndex + 1);\n\n    if (!match) {\n      throw new Error(`Attribute is missing value on line ${lineNumber}`);\n    }\n\n    // find value end\n    let valueStart = match.index!;\n    let value = \"\";\n\n    if (line[valueStart] == '\"') {\n      // quoted value\n      let valueEnd = findClosingQuote(line, valueStart + 1);\n\n      if (valueEnd < 0) {\n        throw new Error(`String missing closing quote on line ${lineNumber}`);\n      }\n\n      valueEnd += 1;\n\n      value = unquote(line.slice(valueStart, valueEnd));\n      index = valueEnd;\n    } else {\n      // no quotes\n      let valueEnd = line.indexOf(\" \", valueStart);\n\n      if (valueEnd < 0) {\n        valueEnd = line.length;\n      }\n\n      value = line.slice(valueStart, valueEnd);\n      index = valueEnd;\n    }\n\n    attributes[key] = value;\n  }\n\n  return attributes;\n}\n\nexport function parseSheet(text: string): BoomSheet {\n  const animations: BoomSheetsAnimation[] = [];\n  const boomsheet: BoomSheet = {\n    version: \"modern\",\n    animations,\n  };\n\n  let lineNumber = 0;\n  let currentAnimation: BoomSheetsAnimation | undefined;\n  let currentFrame: BoomSheetsFrame | undefined;\n\n  for (let line of text.split(\"\\n\")) {\n    line = line.trim();\n    lineNumber += 1;\n\n    if (\n      line == \"\" ||\n      line.startsWith(\"#\") ||\n      line.startsWith(\"!\") ||\n      line.startsWith(\"imagePath\") ||\n      line.startsWith(\"version\")\n    ) {\n      // skip\n      continue;\n    }\n\n    if (line.startsWith(\"anim \")) {\n      const animation: BoomSheetsAnimation = {\n        state: line.slice(\"anim \".length).trim(),\n        frames: [],\n      };\n\n      animations.push(animation);\n      currentAnimation = animation;\n    } else if (line.startsWith(\"animation \")) {\n      boomsheet.version = \"legacy\";\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      const animation: BoomSheetsAnimation = {\n        state: attributes.state,\n        frames: [],\n      };\n\n      if (!attributes.state) {\n        throw new Error(\n          `Animation is missing state name on line ${lineNumber}`\n        );\n      }\n\n      animations.push(animation);\n      currentAnimation = animation;\n    } else if (line.startsWith(\"frame\") || line.startsWith(\"blank\")) {\n      if (!currentAnimation) {\n        throw new Error(\n          `No animation state to associate frame with on line ${lineNumber}`\n        );\n      }\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      const frame: BoomSheetsFrame = {\n        x: parseFloat(attributes.x) || 0,\n        y: parseFloat(attributes.y) || 0,\n        w: parseFloat(attributes.w) || 0,\n        h: parseFloat(attributes.h) || 0,\n        originx: parseFloat(attributes.originx) || 0,\n        originy: parseFloat(attributes.originy) || 0,\n        flipx: parseInt(attributes.flipx) == 1,\n        flipy: parseInt(attributes.flipy) == 1,\n        duration: attributes.duration || attributes.dur || \"\",\n        points: [],\n      };\n\n      currentAnimation.frames.push(frame);\n      currentFrame = frame;\n    } else if (line.startsWith(\"point \")) {\n      if (!currentFrame) {\n        throw new Error(\n          `No frame to associate point with on line ${lineNumber}`\n        );\n      }\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      if (!attributes.label) {\n        throw new Error(`Point is missing label on line ${lineNumber}`);\n      }\n\n      const point: BoomSheetsPoint = {\n        label: attributes.label,\n        x: parseFloat(attributes.x),\n        y: parseFloat(attributes.y),\n      };\n\n      currentFrame.points.push(point);\n    } else {\n      const wordEnd = line.indexOf(\" \");\n      const word = wordEnd < 0 ? line : line.slice(0, wordEnd);\n      throw new Error(`Unexpected \"${word}\" on line ${lineNumber}`);\n    }\n  }\n\n  return boomsheet;\n}\n\ntype SerializeObjectOptions = {\n  quoteAllValues?: boolean;\n  renamedKeys?: { [key: string]: string };\n};\n\nfunction serializeObject(\n  name: string,\n  object: Object,\n  options: SerializeObjectOptions = { quoteAllValues: true }\n): string {\n  const text: string[] = [name];\n\n  for (const key in object) {\n    const value = object[key];\n    let renamedKey = key;\n\n    if (options.renamedKeys) {\n      renamedKey = options.renamedKeys[key] || key;\n    }\n\n    switch (typeof value) {\n      case \"string\":\n        if (value != \"\") {\n          text.push(\" \");\n          text.push(renamedKey);\n          text.push(\"=\");\n          if (\n            options.quoteAllValues ||\n            value.includes('\"') ||\n            value.includes(\" \")\n          ) {\n            text.push(quote(value));\n          } else {\n            text.push(value);\n          }\n        }\n        break;\n      case \"number\":\n        if (value != 0) {\n          if (options.quoteAllValues) {\n            text.push(` ${renamedKey}=\"${value}\"`);\n          } else {\n            text.push(` ${renamedKey}=${value}`);\n          }\n        }\n        break;\n      case \"boolean\":\n        if (value == true) {\n          text.push(\" \");\n          text.push(renamedKey);\n\n          if (options.quoteAllValues) {\n            text.push('=\"1\"');\n          } else {\n            text.push(\"=1\");\n          }\n        }\n        break;\n      case \"object\":\n        if (Array.isArray(value)) {\n          // fall through to error if the value is not an array\n          break;\n        }\n      default:\n        throw new Error(`Unexpected ${typeof value} for ${renamedKey}`);\n    }\n  }\n\n  return text.join(\"\");\n}\n\nexport function serializeAnimations(boomsheet: BoomSheet): string {\n  const lines: string[] = [];\n\n  const options: SerializeObjectOptions = {\n    quoteAllValues: true,\n  };\n\n  if (boomsheet.version == \"modern\") {\n    options.quoteAllValues = false;\n    options.renamedKeys = { duration: \"dur\" };\n  }\n\n  for (const animation of boomsheet.animations) {\n    if (boomsheet.version == \"modern\") {\n      lines.push(\"anim \" + animation.state);\n    } else {\n      lines.push(serializeObject(\"animation\", animation, options));\n    }\n\n    for (const frame of animation.frames) {\n      lines.push(serializeObject(\"frame\", frame, options));\n\n      for (const point of frame.points) {\n        lines.push(serializeObject(\"point\", point, options));\n      }\n    }\n\n    lines.push(\"\");\n  }\n\n  return lines.join(\"\\n\");\n}\n","\nvar single = exports.single = function (s) {\n  return \"'\" + s.replace(/\\\\|'/g, function (m) { return '\\\\'+m })+\"'\"\n}\n\nvar double = exports.double = function (s) {\n  return '\"' + s.replace(/\\\\|\"/g, function (m) { return '\\\\'+m })+'\"'\n}\n\nexports.quote = function (s) {\n  return  /'/.test(s) ? double(s) : single(s)\n}\n\nexports.unquote = function (s) {\n  var quote = s[0]\n  var single = quote === \"'\"\n  return s.substring(1, s.length - 1)\n      .replace(/\\\\\\\\/g, '\\\\')\n      .replace(single ? /\\\\'/g : /\\\\\"/g, quote)\n}\n\n","export function loadImageFile(file: File): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    // load file as data url, then load as image\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      // load image\n      const image = new Image();\n\n      image.src = reader.result as string;\n\n      image.onload = function () {\n        resolve(image);\n      };\n\n      image.onerror = function () {\n        reject(new Error(`Failed to load \"${file.name}\"`));\n      };\n    };\n\n    reader.onerror = function () {\n      reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n    };\n\n    reader.readAsDataURL(file);\n  });\n}\n\nexport function loadTextFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      resolve(reader.result as string);\n    };\n\n    reader.onerror = function () {\n      reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n    };\n\n    reader.readAsText(file);\n  });\n}\n","import pack from \"bin-pack\";\nimport { serializeAnimations as serializeSheet } from \"./boomsheets-animations\";\nimport groupFrames, { FrameGroup, moveGroup } from \"./group-frames\";\nimport { InputSheet } from \"./input-sheets\";\nimport { Rect, pointIntersectsRect, rectOverlaps } from \"./rect\";\n\ntype PackedFrameGroup = {\n  work: FrameGroup;\n  packed: FrameGroup;\n};\n\nexport default class FrameOrganizerWorkspace {\n  #originalSheet: InputSheet = {};\n  #sheet: InputSheet = {};\n  #frameGroups: PackedFrameGroup[] = [];\n  #selectedGroups: PackedFrameGroup[] = [];\n  #canvas: HTMLCanvasElement;\n  #ctx: CanvasRenderingContext2D;\n  #frameCanvas: HTMLCanvasElement;\n  #frameCtx: CanvasRenderingContext2D;\n\n  #expandingSelection = false;\n  #mouseDown = false;\n  #selectionRect?: Rect;\n  #dragStartX = 0;\n  #dragStartY = 0;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.#canvas = canvas;\n    this.#ctx = canvas.getContext(\"2d\")!;\n\n    this.#frameCanvas = document.createElement(\"canvas\");\n    this.#frameCtx = this.#frameCanvas.getContext(\"2d\")!;\n    this.#frameCtx.globalCompositeOperation = \"copy\";\n\n    let mouseX = 0;\n    let mouseY = 0;\n\n    const resolveMousePosition = (event: MouseEvent) => {\n      const boundingRect = canvas.getBoundingClientRect();\n      const inverseScale = canvas.width / boundingRect.width;\n\n      mouseX = Math.floor((event.clientX - boundingRect.left) * inverseScale);\n      mouseY = Math.floor((event.clientY - boundingRect.top) * inverseScale);\n    };\n\n    this.#canvas.addEventListener(\"mousedown\", (event) => {\n      resolveMousePosition(event);\n\n      this.#mouseDown = true;\n      this.#dragStartX = mouseX;\n      this.#dragStartY = mouseY;\n\n      const selectedExisting = this.#selectedGroups.some(({ work }) =>\n        pointIntersectsRect(work, mouseX, mouseY)\n      );\n\n      if (selectedExisting) {\n        this.#expandingSelection = false;\n      } else {\n        // redefine selection\n        this.#selectedGroups = this.#frameGroups.filter(({ work }) =>\n          pointIntersectsRect(work, mouseX, mouseY)\n        );\n\n        this.#expandingSelection = this.#selectedGroups.length == 0;\n      }\n\n      this.render();\n    });\n\n    document.body.addEventListener(\"mousemove\", (event) => {\n      if (!this.#mouseDown) {\n        return;\n      }\n\n      const lastX = mouseX;\n      const lastY = mouseY;\n      resolveMousePosition(event);\n\n      if (this.#expandingSelection) {\n        const minX = Math.min(mouseX, this.#dragStartX);\n        const minY = Math.min(mouseY, this.#dragStartY);\n        const maxX = Math.max(mouseX, this.#dragStartX);\n        const maxY = Math.max(mouseY, this.#dragStartY);\n\n        const rect = {\n          x: minX,\n          y: minY,\n          w: maxX - minX + 1,\n          h: maxY - minY + 1,\n        };\n        this.#selectionRect = rect;\n\n        this.#selectedGroups = this.#frameGroups.filter(({ work }) =>\n          rectOverlaps(rect, work)\n        );\n      } else {\n        const shiftX = mouseX - lastX;\n        const shiftY = mouseY - lastY;\n        this.#shiftSelections(shiftX, shiftY);\n      }\n\n      this.render();\n    });\n\n    document.body.addEventListener(\"mouseup\", () => {\n      if (this.#mouseDown) {\n        this.#mouseDown = false;\n        this.#selectionRect = undefined;\n        this.render();\n      }\n    });\n\n    this.#canvas.addEventListener(\"keydown\", (event) => {\n      let shiftX = 0;\n      let shiftY = 0;\n\n      switch (event.code) {\n        case \"KeyA\":\n        case \"ArrowLeft\":\n          shiftX -= 1;\n          break;\n        case \"KeyD\":\n        case \"ArrowRight\":\n          shiftX += 1;\n          break;\n        case \"KeyW\":\n        case \"ArrowUp\":\n          shiftY -= 1;\n          break;\n        case \"KeyS\":\n        case \"ArrowDown\":\n          shiftY += 1;\n          break;\n      }\n\n      if (shiftX == 0 && shiftY == 0) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (event.shiftKey) {\n        this.#accordionSelections(shiftX, shiftY);\n      } else {\n        this.#shiftSelections(shiftX, shiftY);\n      }\n\n      this.render();\n    });\n  }\n\n  #shiftSelections(shiftX: number, shiftY: number) {\n    for (const { work } of this.#selectedGroups) {\n      moveGroup(work, work.x + shiftX, work.y + shiftY);\n    }\n  }\n\n  #accordionSelections(shiftX: number, shiftY: number) {\n    if (this.#selectedGroups.length == 0) {\n      return;\n    }\n\n    // x\n    this.#selectedGroups.sort((a, b) => a.work.x - b.work.x);\n\n    let lastX = this.#selectedGroups[0].work.x;\n    let currentShiftX = 0;\n\n    for (const { work } of this.#selectedGroups) {\n      if (work.x != lastX) {\n        lastX = work.x;\n        currentShiftX += shiftX;\n      }\n\n      moveGroup(work, work.x + currentShiftX, work.y);\n    }\n\n    // y\n    this.#selectedGroups.sort((a, b) => a.work.y - b.work.y);\n\n    let lastY = this.#selectedGroups[0].work.y;\n    let currentShiftY = 0;\n\n    for (const { work } of this.#selectedGroups) {\n      if (work.y != lastY) {\n        lastY = work.y;\n        currentShiftY += shiftY;\n      }\n\n      moveGroup(work, work.x, work.y + currentShiftY);\n    }\n  }\n\n  loadSheet(sheet: InputSheet) {\n    const sourceImage = sheet.image!;\n\n    // update canvas bounds\n    this.#canvas.width = sourceImage.width;\n    this.#canvas.height = sourceImage.height;\n\n    // can't use structured clone on image element\n    sheet.image = undefined;\n\n    this.#originalSheet = sheet;\n    this.#sheet = structuredClone(sheet);\n\n    // put the image back\n    sheet.image = sourceImage;\n    this.#sheet.image = sourceImage;\n\n    const groups = groupFrames(this.#sheet.boomsheet!.animations);\n    const packed = pack(\n      groups.map((group) => ({\n        width: group.w + 2,\n        height: group.h + 2,\n        group,\n      }))\n    );\n\n    this.#frameGroups = [];\n\n    for (const item of packed.items) {\n      const work = item.item.group;\n      const packed = structuredClone(work);\n\n      moveGroup(packed, item.x + 1, item.y + 1);\n\n      this.#frameGroups.push({\n        work,\n        packed,\n      });\n    }\n\n    this.#updateFrameSource(packed.width, packed.height);\n    this.render();\n  }\n\n  #updateFrameSource(width: number, height: number) {\n    const sourceImage = this.#sheet.image!;\n\n    // update canvas bounds\n    this.#frameCanvas.width = width;\n    this.#frameCanvas.height = height;\n\n    // create frame source\n    for (const { work, packed } of this.#frameGroups) {\n      for (let i = 0; i < packed.frames.length; i++) {\n        const sourceFrame = work.frames[i];\n        const destFrame = packed.frames[i];\n\n        const w = sourceFrame.w;\n        const h = sourceFrame.h;\n\n        this.#frameCtx.drawImage(\n          sourceImage,\n          sourceFrame.x,\n          sourceFrame.y,\n          w,\n          h,\n          destFrame.x,\n          destFrame.y,\n          w,\n          h\n        );\n      }\n    }\n  }\n\n  unpack() {\n    // can't use structured clone on image element\n    const image = this.#originalSheet.image;\n    this.#originalSheet.image = undefined;\n\n    this.#sheet = structuredClone(this.#originalSheet);\n\n    // put the image back\n    this.#sheet.image = image;\n    this.#originalSheet.image = image;\n\n    if (!this.#sheet.boomsheet) {\n      return;\n    }\n\n    // build frame groups and move frames\n    this.#frameGroups = [];\n\n    for (const animation of this.#sheet.boomsheet.animations) {\n      for (const frame of animation.frames) {\n        const { x, y, w, h } = frame;\n        const work = { x, y, w, h, frames: [frame] };\n        const packed = structuredClone(work);\n        this.#frameGroups.push({ work, packed });\n      }\n    }\n\n    if (image) {\n      this.#updateFrameSource(image.width, image.height);\n    }\n\n    // move frames\n    let frameGroupIndex = 0;\n    let placeX = 1;\n    let placeY = 1;\n    let nextY = placeY;\n    let width = placeX;\n\n    for (const animation of this.#sheet.boomsheet.animations) {\n      for (const frame of animation.frames) {\n        const frameGroup = this.#frameGroups[frameGroupIndex];\n\n        moveGroup(frameGroup.work, placeX, placeY);\n        placeX += frame.w + 1;\n\n        nextY = Math.max(nextY, placeY + frame.h + 1);\n        width = Math.max(width, placeX);\n\n        frameGroupIndex++;\n      }\n\n      placeX = 1;\n      placeY = nextY;\n    }\n\n    // update canvas bounds\n    this.#canvas.width = width;\n    this.#canvas.height = placeY;\n\n    this.render();\n  }\n\n  render() {\n    this.#ctx.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    this.#renderFrames(this.#ctx);\n    this.#renderOutlines();\n  }\n\n  #renderFrames(ctx: CanvasRenderingContext2D) {\n    for (const { work, packed } of this.#frameGroups) {\n      for (let i = 0; i < packed.frames.length; i++) {\n        const sourceFrame = packed.frames[i];\n        const destFrame = work.frames[i];\n\n        const w = sourceFrame.w;\n        const h = sourceFrame.h;\n\n        ctx.drawImage(\n          this.#frameCanvas,\n          sourceFrame.x,\n          sourceFrame.y,\n          w,\n          h,\n          destFrame.x,\n          destFrame.y,\n          w,\n          h\n        );\n      }\n    }\n  }\n\n  #renderOutlines() {\n    const ctx = this.#ctx;\n\n    ctx.strokeStyle = \"lime\";\n    ctx.fillStyle = \"rgba(0, 255, 0, 0.2)\";\n\n    const renderRect = (x: number, y: number, w: number, h: number) => {\n      ctx.beginPath();\n      ctx.rect(x + 0.5, y + 0.5, w, h);\n      ctx.fill();\n      ctx.stroke();\n    };\n\n    for (const group of this.#frameGroups) {\n      ctx.globalAlpha = this.#selectedGroups.includes(group) ? 1.0 : 0.2;\n      const { x, y, w, h } = group.work;\n      renderRect(x, y, w - 1, h - 1);\n    }\n\n    ctx.globalAlpha = 1.0;\n\n    if (this.#selectionRect) {\n      const { x, y, w, h } = this.#selectionRect;\n      renderRect(x, y, w - 1, h - 1);\n    }\n  }\n\n  renderOutput(canvas: HTMLCanvasElement) {\n    canvas.width = this.#canvas.width;\n    canvas.height = this.#canvas.height;\n    const ctx = canvas.getContext(\"2d\")!;\n    this.#renderFrames(ctx);\n  }\n\n  serializeSheet(): string {\n    if (this.#sheet.boomsheet) {\n      return serializeSheet(this.#sheet.boomsheet);\n    } else {\n      return \"\";\n    }\n  }\n}\n","\"use strict\";\n\nvar GrowingPacker = require('./packer.growing.js');\n\nmodule.exports = function(items, options) {\n\toptions = options || {};\n\tvar packer = new GrowingPacker();\n\tvar inPlace = options.inPlace || false;\n\n\t// Clone the items.\n\tvar newItems = items.map(function(item) { return inPlace ? item : { width: item.width, height: item.height, item: item }; });\n\n\tnewItems = newItems.sort(function(a, b) {\n\t\t// TODO: check that each actually HAS a width and a height.\n\t\t// Sort based on the size (area) of each block.\n\t\treturn (b.width * b.height) - (a.width * a.height);\n\t});\n\n\tpacker.fit(newItems);\n\n\tvar w = newItems.reduce(function(curr, item) { return Math.max(curr, item.x + item.width); }, 0);\n\tvar h = newItems.reduce(function(curr, item) { return Math.max(curr, item.y + item.height); }, 0);\n\n\tvar ret = {\n\t\twidth: w,\n\t\theight: h\n\t};\n\n\tif (!inPlace) {\n\t\tret.items = newItems;\n\t}\n\n\treturn ret;\n};\n","/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/\n\nvar GrowingPacker = function() { };\n\nGrowingPacker.prototype = {\n\n\tfit: function(blocks) {\n\t\tvar n, node, block, len = blocks.length, fit;\n\t\tvar width  = len > 0 ? blocks[0].width : 0;\n\t\tvar height = len > 0 ? blocks[0].height : 0;\n\t\tthis.root = { x: 0, y: 0, width: width, height: height };\n\t\tfor (n = 0; n < len ; n++) {\n\t\t\tblock = blocks[n];\n\t\t\tif (node = this.findNode(this.root, block.width, block.height)) {\n\t\t\t\tfit = this.splitNode(node, block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfit = this.growNode(block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tfindNode: function(root, width, height) {\n\t\tif (root.used)\n\t\t\treturn this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n\t\telse if ((width <= root.width) && (height <= root.height))\n\t\t\treturn root;\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tsplitNode: function(node, width, height) {\n\t\tnode.used = true;\n\t\tnode.down  = { x: node.x,         y: node.y + height, width: node.width,         height: node.height - height };\n\t\tnode.right = { x: node.x + width, y: node.y,          width: node.width - width, height: height               };\n\t\treturn node;\n\t},\n\n\tgrowNode: function(width, height) {\n\t\tvar canGrowDown  = (width  <= this.root.width);\n\t\tvar canGrowRight = (height <= this.root.height);\n\n\t\tvar shouldGrowRight = canGrowRight && (this.root.height >= (this.root.width  + width )); // attempt to keep square-ish by growing right when height is much greater than width\n\t\tvar shouldGrowDown  = canGrowDown  && (this.root.width  >= (this.root.height + height)); // attempt to keep square-ish by growing down  when width  is much greater than height\n\n\t\tif (shouldGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (shouldGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse if (canGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (canGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse\n\t\t\treturn null; // need to ensure sensible root starting size to avoid this happening\n\t},\n\n\tgrowRight: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width + width,\n\t\t\theight: this.root.height,\n\t\t\tdown: this.root,\n\t\t\tright: { x: this.root.width, y: 0, width: width, height: this.root.height }\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tgrowDown: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width,\n\t\t\theight: this.root.height + height,\n\t\t\tdown:  { x: 0, y: this.root.height, width: this.root.width, height: height },\n\t\t\tright: this.root\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t}\n\n};\n\nmodule.exports = GrowingPacker;\n\n","import { BoomSheetsAnimation, BoomSheetsFrame } from \"./boomsheets-animations\";\nimport { rectOverlaps } from \"./rect\";\n\nexport type FrameGroup = {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  frames: BoomSheetsFrame[];\n};\n\nfunction updateBounds(group: FrameGroup) {\n  const firstFrame = group.frames[0];\n  let minX = firstFrame.x;\n  let minY = firstFrame.y;\n  let maxX = firstFrame.x + firstFrame.w;\n  let maxY = firstFrame.y + firstFrame.h;\n\n  for (let i = 1; i < group.frames.length; i++) {\n    const frame = group.frames[i];\n    minX = Math.min(minX, frame.x);\n    minY = Math.min(minY, frame.y);\n    maxX = Math.max(maxX, frame.x + frame.w);\n    maxY = Math.max(maxY, frame.y + frame.h);\n  }\n\n  group.x = minX;\n  group.y = minY;\n  group.w = maxX - minX;\n  group.h = maxY - minY;\n}\n\n// create a single group, removes frames from the passed list\nfunction takeGroup(frames: BoomSheetsFrame[]): FrameGroup {\n  const group: FrameGroup = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0,\n    frames: [frames.pop()!],\n  };\n\n  updateBounds(group);\n\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (!rectOverlaps(group, frame)) {\n      // failed the primary bounding box\n      continue;\n    }\n\n    if (!group.frames.some((f) => rectOverlaps(f, frame))) {\n      // failed against internal bounding boxes\n      continue;\n    }\n\n    // take frame by swap remove\n    frames[i] = frames[frames.length - 1];\n    frames.pop();\n\n    group.frames.push(frame);\n    updateBounds(group);\n  }\n\n  return group;\n}\n\nexport function moveGroup(group: FrameGroup, x: number, y: number) {\n  const shiftX = x - group.x;\n  const shiftY = y - group.y;\n\n  group.x = x;\n  group.y = y;\n\n  for (const frame of group.frames) {\n    frame.x += shiftX;\n    frame.y += shiftY;\n  }\n}\n\nexport default function groupFrames(\n  animations: BoomSheetsAnimation[]\n): FrameGroup[] {\n  const frames = animations.flatMap((animation) => animation.frames);\n  const groups: FrameGroup[] = [];\n\n  while (frames.length > 0) {\n    groups.push(takeGroup(frames));\n  }\n\n  return groups;\n}\n","export type Rect = { x: number; y: number; w: number; h: number };\n\nexport function rectOverlaps(a: Rect, b: Rect) {\n  const aIsLeft = a.x + a.w <= b.x;\n  const aIsRight = a.x >= b.x + b.w;\n  const aIsAbove = a.y + a.h <= b.y;\n  const aIsBelow = a.y >= b.y + b.h;\n\n  return !(aIsLeft || aIsRight || aIsAbove || aIsBelow);\n}\n\nexport function pointIntersectsRect(rect: Rect, x: number, y: number) {\n  return (\n    x >= rect.x && x < rect.x + rect.w && y >= rect.y && y < rect.y + rect.h\n  );\n}\n","import { BoomSheet } from \"./boomsheets-animations\";\n\nexport type InputSheet = {\n  image?: HTMLImageElement;\n  imageError?: string;\n  boomsheet?: BoomSheet;\n  animationError?: string;\n};\n\nexport function resolveSingleErrorMessage(\n  sheet: InputSheet\n): string | undefined {\n  if (sheet.animationError) {\n    return sheet.animationError;\n  } else if (sheet.imageError) {\n    return sheet.imageError;\n  } else if (!sheet.boomsheet) {\n    return \"Missing .animation file\";\n  } else if (!sheet.image) {\n    return \"Missing image file\";\n  }\n}\n"],"names":["$cbdf17c3d09bc906$export$f0199846ca09d4f9","s","quote","single","substring","length","replace","$fdfd340aa13d9aca$var$nonSpaceRegex","$fdfd340aa13d9aca$var$keyEndRegex","$fdfd340aa13d9aca$var$matchGRegexFrom","text","regex","index","lastIndex","exec","$fdfd340aa13d9aca$var$parseAttributes","line","lineNumber","match","attributes","indexOf","Error","slice","key","eqIndex","valueStart","value","valueEnd","$fdfd340aa13d9aca$var$findClosingQuote","$fdfd340aa13d9aca$var$stringCharIsEscaped","escaped","$fdfd340aa13d9aca$var$serializeObject","name","object","options","quoteAllValues","renamedKey","renamedKeys","push","includes","m","Array","isArray","join","$7bcff58d1f5524c8$exports","$06f5eb59911c96c0$exports","$06f5eb59911c96c0$var$GrowingPacker","$f2b72c385c32c0e1$export$2afdae6c40900d48","a","b","aIsLeft","x","w","aIsRight","aIsAbove","y","h","aIsBelow","$f2b72c385c32c0e1$export$2b26f95af2147236","rect","$c85964dfd97e8768$var$updateBounds","group","firstFrame","frames","minX","minY","maxX","maxY","i","frame","Math","min","max","$c85964dfd97e8768$export$21bf01f8bab81bf3","shiftX","shiftY","prototype","fit","blocks","n","node","block","len","width","height","root","findNode","splitNode","growNode","used","right","down","canGrowDown","canGrowRight","shouldGrowRight","shouldGrowDown","growRight","growDown","items","packer","inPlace","newItems","map","item","sort","ret","reduce","curr","$b4e14b6b8da86996$var$canvas","document","querySelector","$b4e14b6b8da86996$var$workspace","originalSheet","sheet","frameGroups","selectedGroups","canvas","ctx","frameCanvas","frameCtx","expandingSelection","mouseDown","selectionRect","dragStartX","dragStartY","constructor","getContext","createElement","globalCompositeOperation","mouseX","mouseY","resolveMousePosition","event","boundingRect","getBoundingClientRect","inverseScale","floor","clientX","left","clientY","top","addEventListener","some","work","filter","render","body","lastX","lastY","shiftSelections","undefined","code","preventDefault","shiftKey","accordionSelections","currentShiftX","currentShiftY","loadSheet","sourceImage","image","structuredClone","groups","animations","flatMap","animation","$c85964dfd97e8768$var$takeGroup","pop","f","boomsheet","packed","__esModule","default","updateFrameSource","sourceFrame","destFrame","drawImage","unpack","frameGroupIndex","placeX","placeY","nextY","frameGroup","clearRect","renderFrames","renderOutlines","strokeStyle","fillStyle","renderRect","beginPath","fill","stroke","globalAlpha","renderOutput","serializeSheet","lines","version","duration","state","point","points","$b4e14b6b8da86996$var$pendingSheet","$b4e14b6b8da86996$var$logError","error","console","alert","$b4e14b6b8da86996$var$loadFiles","files","file","endsWith","Promise","resolve","reject","reader","FileReader","onload","Image","src","result","onerror","readAsDataURL","imageError","toString","readAsText","currentAnimation","currentFrame","split","trim","startsWith","parseFloat","originx","originy","flipx","parseInt","flipy","dur","label","wordEnd","word","animationError","getElementById","onclick","confirm","textarea","dataTransfer","getAsFile","catch","finally","errorMessage","errorElement","innerText"],"version":3,"file":"index.b537aabd.js.map"}