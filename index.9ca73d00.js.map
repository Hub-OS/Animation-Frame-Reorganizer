{"mappings":"AGaA,EAAkB,SAAU,CAAC,EAC3B,IAAI,EAAQ,CAAC,CAAC,EAAE,CACZ,EAAS,AAAU,MAAV,EACb,OAAO,EAAE,SAAS,CAAC,EAAG,EAAE,MAAM,CAAG,GAC5B,OAAO,CAAC,QAAS,MACjB,OAAO,CAAC,EAAS,OAAS,OAAQ,EACzC,EDQA,MAAM,EAAgB,MAChB,EAAc,SAEpB,SAAS,EACP,CAAY,CACZ,CAAa,CACb,CAAa,EAGb,OADA,EAAM,SAAS,CAAG,EACX,EAAM,IAAI,CAAC,EACpB,CAmCA,SAAS,EAAgB,CAAY,CAAE,CAAkB,MAUnD,EATJ,IAAM,EAAyB,CAAC,EAE5B,EAAQ,EAAK,OAAO,CAAC,KAEzB,GAAI,EAAQ,EAEV,OAAO,EAKT,KAAQ,EAAQ,EAAgB,EAAM,EAAe,IAAS,CAM5D,GAAI,CAFJ,CAAA,EAAQ,EAAgB,EAAM,EAH9B,EAAQ,EAAM,KAAK,CAGnB,EAGE,MAAM,AAAI,MACR,CAAC,YAAY,EAAE,EAAK,KAAK,CAAC,GAAO,UAAU,EAAE,EAAW,CAAC,EAI7D,IAAM,EAAM,EAAK,KAAK,CAAC,EAAO,EAAM,KAAK,EAGnC,EAAU,EAAK,OAAO,CAAC,IAAK,EAAM,KAAK,EAE7C,GAAI,EAAU,EACZ,MAAM,AAAI,MAAM,CAAC,iCAAiC,EAAE,EAAW,CAAC,EAMlE,GAAI,CAFJ,CAAA,EAAQ,EAAgB,EAAM,EAAe,EAAU,EAAvD,EAGE,MAAM,AAAI,MAAM,CAAC,mCAAmC,EAAE,EAAW,CAAC,EAIpE,IAAI,EAAa,EAAM,KAAK,CACxB,EAAQ,GAEZ,GAAI,AAAoB,KAApB,CAAI,CAAC,EAAW,CAAS,CAE3B,IAAI,EAAW,AA/DrB,SAA0B,CAAY,CAAE,CAAa,EAEnD,OAAa,CACX,GAAI,AAAC,CAAA,EAAQ,EAAK,OAAO,CAAC,IAAK,EAAA,EAAU,EACvC,OAAO,GAGT,GAAI,CAAC,AAvBT,SAA6B,CAAY,CAAE,CAAa,EACtD,IAAI,EAAU,CAAA,EAEd,KAGE,AAHK,EAAQ,GAGT,AAAe,MAAf,CAAI,CAFR,GAAS,EAEM,EAIf,EAAU,CAAC,EAGb,OAAO,CACT,EAS6B,EAAM,GAC7B,MAGF,GAAS,CACX,CAEA,OAAO,CACT,EAgDsC,EAAM,EAAa,GAEnD,GAAI,EAAW,EACb,MAAM,AAAI,MAAM,CAAC,qCAAqC,EAAE,EAAW,CAAC,EAGtE,GAAY,EAEZ,EAAQ,AAAA,EAAQ,EAAK,KAAK,CAAC,EAAY,IACvC,EAAQ,CACV,KAAO,CAEL,IAAI,EAAW,EAAK,OAAO,CAAC,IAAK,GAE7B,EAAW,GACb,CAAA,EAAW,EAAK,MAAM,AAAN,EAGlB,EAAQ,EAAK,KAAK,CAAC,EAAY,GAC/B,EAAQ,CACV,CAEA,CAAU,CAAC,EAAI,CAAG,CACpB,CAEA,OAAO,CACT,CA6FA,SAAS,EAAgB,CAAY,CAAE,CAAc,EACnD,IAAM,EAAiB,CAAC,EAAK,CAE7B,IAAK,IAAM,KAAO,EAAQ,CACxB,IAAM,EAAQ,CAAM,CAAC,EAAI,CAEzB,OAAQ,OAAO,GACb,IAAK,SACU,IAAT,IACF,EAAK,IAAI,CAAC,KACV,EAAK,IAAI,CAAC,GACV,EAAK,IAAI,CAAC,KACV,EAAK,IAAI,CCnPV,IAAM,ADmPW,ECnPT,OAAO,CAAC,QAAS,SAAU,CAAC,EAAI,MAAO,KAAK,CAAE,GAAG,MDqP1D,KACF,KAAK,SACU,GAAT,GACF,EAAK,IAAI,CAAC,CAAC,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,EAE9B,KACF,KAAK,UACU,CAAA,GAAT,IACF,EAAK,IAAI,CAAC,KACV,EAAK,IAAI,CAAC,GACV,EAAK,IAAI,CAAC,OAEZ,KACF,KAAK,SACH,GAAI,MAAM,OAAO,CAAC,GAEhB,KAEJ,SACE,MAAM,AAAI,MAAM,CAAC,WAAW,EAAE,OAAO,EAAM,KAAK,EAAE,EAAI,CAAC,CAC3D,CACF,CAEA,OAAO,EAAK,IAAI,CAAC,GACnB,C,ICtQA,E,E,C,E,E,C,EK8CI,EAAgB,WAAa,CAEjC,CAAA,EAAc,SAAS,CAAG,CAEzB,IAAK,SAAS,CAAM,EACnB,IAAI,EAAG,EAAM,EAA4B,EAArB,EAAM,EAAO,MAAM,CACnC,EAAS,EAAM,EAAI,CAAM,CAAC,EAAE,CAAC,KAAK,CAAG,EACrC,EAAS,EAAM,EAAI,CAAM,CAAC,EAAE,CAAC,MAAM,CAAG,EAE1C,IAAK,EAAI,EADT,IAAI,CAAC,IAAI,CAAG,CAAE,EAAG,EAAG,EAAG,EAAG,MAAO,EAAO,OAAQ,CAAO,EAC3C,EAAI,EAAM,IACrB,EAAQ,CAAM,CAAC,EAAE,CAEhB,EADG,CAAA,EAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAE,EAAM,KAAK,CAAE,EAAM,MAAM,CAAA,EACtD,IAAI,CAAC,SAAS,CAAC,EAAM,EAAM,KAAK,CAAE,EAAM,MAAM,EAK9C,IAAI,CAAC,QAAQ,CAAC,EAAM,KAAK,CAAE,EAAM,MAAM,EAC7C,EAAM,CAAC,CAAG,EAAI,CAAC,CACf,EAAM,CAAC,CAAG,EAAI,CAAC,AAGlB,EAEA,SAAU,SAAS,CAAI,CAAE,CAAK,CAAE,CAAM,SACrC,AAAI,EAAK,IAAI,CACL,IAAI,CAAC,QAAQ,CAAC,EAAK,KAAK,CAAE,EAAO,IAAW,IAAI,CAAC,QAAQ,CAAC,EAAK,IAAI,CAAE,EAAO,GAC3E,GAAU,EAAK,KAAK,EAAM,GAAU,EAAK,MAAM,CAChD,EAEA,IACT,EAEA,UAAW,SAAS,CAAI,CAAE,CAAK,CAAE,CAAM,EAItC,OAHA,EAAK,IAAI,CAAG,CAAA,EACZ,EAAK,IAAI,CAAI,CAAE,EAAG,EAAK,CAAC,CAAU,EAAG,EAAK,CAAC,CAAG,EAAQ,MAAO,EAAK,KAAK,CAAU,OAAQ,EAAK,MAAM,CAAG,CAAO,EAC9G,EAAK,KAAK,CAAG,CAAE,EAAG,EAAK,CAAC,CAAG,EAAO,EAAG,EAAK,CAAC,CAAW,MAAO,EAAK,KAAK,CAAG,EAAO,OAAQ,CAAqB,EACvG,CACR,EAEA,SAAU,SAAS,CAAK,CAAE,CAAM,EAC/B,IAAI,EAAgB,GAAU,IAAI,CAAC,IAAI,CAAC,KAAK,CACzC,EAAgB,GAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAE1C,EAAkB,GAAiB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAI,EAC3E,EAAkB,GAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAG,SAE/E,AAAI,EACI,IAAI,CAAC,SAAS,CAAC,EAAO,GACrB,EACD,IAAI,CAAC,QAAQ,CAAC,EAAO,GACpB,EACD,IAAI,CAAC,SAAS,CAAC,EAAO,GACrB,EACD,IAAI,CAAC,QAAQ,CAAC,EAAO,GAErB,IACT,EAEA,UAAW,SAAS,CAAK,CAAE,CAAM,MAU5B,QACJ,CAVA,IAAI,CAAC,IAAI,CAAG,CACX,KAAM,CAAA,EACN,EAAG,EACH,EAAG,EACH,MAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAG,EACzB,OAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CACxB,KAAM,IAAI,CAAC,IAAI,CACf,MAAO,CAAE,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,EAAG,EAAG,MAAO,EAAO,OAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,AAAC,CAC3E,EAEI,EAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAE,EAAO,IACnC,IAAI,CAAC,SAAS,CAAC,EAAM,EAAO,GAE5B,IACT,EAEA,SAAU,SAAS,CAAK,CAAE,CAAM,MAU3B,QACJ,CAVA,IAAI,CAAC,IAAI,CAAG,CACX,KAAM,CAAA,EACN,EAAG,EACH,EAAG,EACH,MAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACtB,OAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAG,EAC3B,KAAO,CAAE,EAAG,EAAG,EAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,MAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,OAAQ,CAAO,EAC3E,MAAO,IAAI,CAAC,IAAI,AACjB,EAEI,EAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAE,EAAO,IACnC,IAAI,CAAC,SAAS,CAAC,EAAM,EAAO,GAE5B,IACT,CAED,EAEA,EAAiB,EDtJjB,EAAiB,SAAS,CAAK,CAAE,CAAO,EACvC,EAAU,GAAW,CAAC,EACtB,IAAI,EAAS,IAAI,EACb,EAAU,EAAQ,OAAO,EAAI,CAAA,EAG7B,EAAW,EAAM,GAAG,CAAC,SAAS,CAAI,EAAI,OAAO,EAAU,EAAO,CAAE,MAAO,EAAK,KAAK,CAAE,OAAQ,EAAK,MAAM,CAAE,KAAM,CAAK,CAAG,GAE1H,EAAW,EAAS,IAAI,CAAC,SAAS,CAAC,CAAE,CAAC,EAGrC,OAAO,EAAG,KAAK,CAAG,EAAE,MAAM,CAAK,EAAE,KAAK,CAAG,EAAE,MAAM,AAClD,GAEA,EAAO,GAAG,CAAC,GAKX,IAAI,EAAM,CACT,MAJO,EAAS,MAAM,CAAC,SAAS,CAAI,CAAE,CAAI,EAAI,OAAO,KAAK,GAAG,CAAC,EAAM,EAAK,CAAC,CAAG,EAAK,KAAK,CAAG,EAAG,GAK7F,OAJO,EAAS,MAAM,CAAC,SAAS,CAAI,CAAE,CAAI,EAAI,OAAO,KAAK,GAAG,CAAC,EAAM,EAAK,CAAC,CAAG,EAAK,MAAM,CAAG,EAAG,EAK/F,EAMA,OAJK,GACJ,CAAA,EAAI,KAAK,CAAG,CADb,EAIO,CACR,EE/BA,MAAM,EAAc,SAAS,cAAc,CAAC,cAErC,SAAS,EAAgB,CAAwB,EACtD,IAAM,EAAe,SAAS,cAAc,CAC1C,4BAKF,IAAK,IAAM,KAFX,EAAY,WAAW,CAAG,GAEN,EAAY,MAAM,EAAE,CACtC,IAAM,EAAc,EAAa,OAAO,CAAC,SAAS,CAAC,CAAA,GASnD,GAHA,AAHoB,EAAY,aAAa,CAC3C,eAEU,SAAS,CAAG,EAAM,IAAI,CAG9B,CAAC,EAAM,KAAK,EAAI,CAAC,EAAM,UAAU,CAAE,CACrC,IAAM,EAAe,EAAY,aAAa,CAC5C,cAGE,CAAA,EAAM,cAAc,CACtB,EAAa,SAAS,CAAG,EAAM,cAAc,CACpC,EAAM,UAAU,CACzB,EAAa,SAAS,CAAG,EAAM,UAAU,CAC/B,EAAM,UAAU,CAEhB,EAAM,KAAK,EACrB,CAAA,EAAa,SAAS,CAAG,oBADpB,EADL,EAAa,SAAS,CAAG,yBAI7B,CAMA,AAH2B,EAAY,aAAa,CAClD,uBAEiB,OAAO,CAAG,WAC3B,EAAY,MAAM,CAAC,EAAM,IAAI,EAC7B,EAAgB,EAClB,EAGA,EAAY,WAAW,CAAC,EAC1B,CACF,CRxCA,MAAM,EAAc,IICL,MAGb,aAAa,CAAY,CAAE,CACzB,IAAI,EAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC,GAAS,EAAK,IAAI,EAAI,UAEhD,IAIJ,EAAQ,CAAE,KAAA,CAAK,EACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAJR,CAOX,CAEA,OAAO,CAAY,CAAE,CACnB,IAAM,EAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,AAAC,GAAS,EAAK,IAAI,EAAI,GAC3D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAO,EAC5B,C,a,CAlBA,IAAA,CAAA,MAAA,CAAuB,EAAE,A,CAmB3B,EJnBA,SAAS,EAAS,CAAK,EACrB,QAAQ,KAAK,CAAC,GACd,MAAM,EACR,CAoDA,eAAe,EAAU,CAAa,EACpC,IAAK,IAAM,KAAQ,EAAO,KALV,EAMd,IAAM,EALD,CADS,EAMQ,EAAK,IAAI,EALrB,KAAK,CAAC,EAAG,EAAK,WAAW,CAAC,MAM9B,EAAQ,EAAY,YAAY,CAAC,GAEvC,GAAI,EAAK,IAAI,CAAC,QAAQ,CAAC,QACrB,GAAI,CACF,EAAM,KAAK,CAAG,MAAM,AGzErB,SAAuB,CAAU,EACtC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAE3B,IAAM,EAAS,IAAI,UAEnB,CAAA,EAAO,MAAM,CAAG,WAEd,IAAM,EAAQ,IAAI,KAElB,CAAA,EAAM,GAAG,CAAG,EAAO,MAAM,CAEzB,EAAM,MAAM,CAAG,WACb,EAAQ,EACV,EAEA,EAAM,OAAO,CAAG,WACd,EAAO,AAAI,MAAM,CAAC,gBAAgB,EAAE,EAAK,IAAI,CAAC,CAAC,CAAC,EAClD,CACF,EAEA,EAAO,OAAO,CAAG,WACf,EAAO,AAAI,MAAM,CAAC,gBAAgB,EAAE,EAAK,IAAI,CAAC,EAAE,EAAE,EAAO,KAAK,CAAC,CAAC,CAAC,EACnE,EAEA,EAAO,aAAa,CAAC,EACvB,EACF,EH+C0C,GAClC,EAAM,UAAU,CAAG,KAAA,CACrB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,GACd,EAAM,UAAU,CAAG,EAAO,QAAQ,EACpC,MACK,GAAI,EAAK,IAAI,CAAC,QAAQ,CAAC,cAC5B,GAAI,CACF,IAAM,EAAO,MAAM,AGrDpB,SAAsB,CAAU,EACrC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAS,IAAI,UAEnB,CAAA,EAAO,MAAM,CAAG,WACd,EAAQ,EAAO,MAAM,CACvB,EAEA,EAAO,OAAO,CAAG,WACf,EAAO,AAAI,MAAM,CAAC,gBAAgB,EAAE,EAAK,IAAI,CAAC,EAAE,EAAE,EAAO,KAAK,CAAC,CAAC,CAAC,EACnE,EAEA,EAAO,UAAU,CAAC,EACpB,EACF,EHuCwC,EAEhC,CAAA,EAAM,UAAU,CAAG,AC+DpB,SAA6B,CAAY,MAI1C,EACA,EAJJ,IAAM,EAAoC,EAAE,CAExC,EAAa,EAIjB,IAAK,IAAI,KAAQ,EAAK,KAAK,CAAC,MAI1B,GAHA,EAAO,EAAK,IAAI,GAChB,GAAc,GAGZ,CAAA,AAAQ,IAAR,GACA,EAAK,UAAU,CAAC,MAChB,EAAK,UAAU,CAAC,cAChB,EAAK,UAAU,CAAC,UAAA,GAMlB,GAAI,EAAK,UAAU,CAAC,cAAe,CACjC,IAAM,EAAa,EAAgB,EAAM,GAEnC,EAAiC,CACrC,MAAO,EAAW,KAAK,CACvB,OAAQ,EAAE,AACZ,EAEA,GAAI,CAAC,EAAW,KAAK,CACnB,MAAM,AAAI,MACR,CAAC,wCAAwC,EAAE,EAAW,CAAC,EAI3D,EAAW,IAAI,CAAC,GAChB,EAAmB,CACrB,MAAO,GAAI,EAAK,UAAU,CAAC,WAAa,EAAK,UAAU,CAAC,UAAW,CACjE,GAAI,CAAC,EACH,MAAM,AAAI,MACR,CAAC,mDAAmD,EAAE,EAAW,CAAC,EAItE,IAAM,EAAa,EAAgB,EAAM,GAEnC,EAAyB,CAC7B,EAAG,WAAW,EAAW,CAAC,GAAK,EAC/B,EAAG,WAAW,EAAW,CAAC,GAAK,EAC/B,EAAG,WAAW,EAAW,CAAC,GAAK,EAC/B,EAAG,WAAW,EAAW,CAAC,GAAK,EAC/B,QAAS,WAAW,EAAW,OAAO,GAAK,EAC3C,QAAS,WAAW,EAAW,OAAO,GAAK,EAC3C,MAAO,SAAS,EAAW,KAAK,GAAK,EACrC,MAAO,SAAS,EAAW,KAAK,GAAK,EACrC,SAAU,EAAW,QAAQ,EAAI,GACjC,OAAQ,EAAE,AACZ,EAEA,EAAiB,MAAM,CAAC,IAAI,CAAC,GAC7B,EAAe,CACjB,MAAO,GAAI,EAAK,UAAU,CAAC,UAAW,CACpC,GAAI,CAAC,EACH,MAAM,AAAI,MACR,CAAC,yCAAyC,EAAE,EAAW,CAAC,EAI5D,IAAM,EAAa,EAAgB,EAAM,GAEzC,GAAI,CAAC,EAAW,KAAK,CACnB,MAAM,AAAI,MAAM,CAAC,+BAA+B,EAAE,EAAW,CAAC,EAGhE,IAAM,EAAyB,CAC7B,MAAO,EAAW,KAAK,CACvB,EAAG,WAAW,EAAW,CAAC,EAC1B,EAAG,WAAW,EAAW,CAAC,CAC5B,EAEA,EAAa,MAAM,CAAC,IAAI,CAAC,EAC3B,KAAO,CACL,IAAM,EAAU,EAAK,OAAO,CAAC,KACvB,EAAO,EAAU,EAAI,EAAO,EAAK,KAAK,CAAC,EAAG,EAChD,OAAM,AAAI,MAAM,CAAC,YAAY,EAAE,EAAK,UAAU,EAAE,EAAW,CAAC,CAC9D,EAGF,OAAO,CACT,EDxJ+C,GACvC,EAAM,cAAc,CAAG,KAAA,CACzB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,GACd,EAAM,cAAc,CAAG,EAAO,QAAQ,EACxC,CAEJ,CACF,CA3EA,SAAS,cAAc,CAAC,gBAAiB,OAAO,CAAG,WACjD,EAAY,MAAM,CAAG,EAAE,CACvB,AAAA,EAAgB,EAClB,EAEA,SAAS,cAAc,CAAC,gBAAiB,OAAO,CAAG,WACjD,IAAM,EAAS,SAAS,aAAa,CAAC,kBAChC,EAAW,SAAS,aAAa,CACrC,oBAGF,GAAI,CACF,IAAM,EAAa,AKDR,SACb,CAAyB,CACzB,CAAwB,M,EAExB,IAAM,EAAoC,EAAE,CACtC,EAAmB,EAAE,CAG3B,IAAK,IAAM,KAAS,EAAY,MAAM,CAAE,CACtC,GAAI,CAAC,EAAM,UAAU,EAAI,CAAC,EAAM,KAAK,CACnC,SAGF,IAAM,EAAwB,gBAAgB,EAAM,UAAU,EAG9D,IAAK,IAAM,KAFX,EAAW,IAAI,IAAI,GAEK,GACtB,IAAK,IAAM,KAAS,EAAU,MAAM,CAClC,EAAK,IAAI,CAAC,CACR,MAAO,EAAM,KAAK,CAClB,MAAA,EACA,MAAO,EAAM,CAAC,CAAG,EACjB,OAAQ,EAAM,CAAC,CAAG,CACpB,EAGN,CAGA,IAAM,EAAa,A,C,C,EAAA,I,E,U,C,E,O,C,C,EAAQ,EAG3B,CAAA,EAAO,KAAK,CAAG,EAAW,KAAK,CAC/B,EAAO,MAAM,CAAG,EAAW,MAAM,CAEjC,IAAM,EAAM,EAAO,UAAU,CAAC,MAE9B,IAAK,IAAM,KAAQ,EAAW,KAAK,CAAE,CACnC,IAAM,EAAQ,EAAK,IAAI,CAAC,KAAK,CAEvB,EAAQ,EAAK,CAAC,CA1CR,EA2CN,EAAQ,EAAK,CAAC,CA3CR,EA6CZ,EAAI,SAAS,CACX,EAAK,IAAI,CAAC,KAAK,CACf,EAAM,CAAC,CACP,EAAM,CAAC,CACP,EAAM,CAAC,CACP,EAAM,CAAC,CACP,EACA,EACA,EAAM,CAAC,CACP,EAAM,CAAC,EAGT,EAAM,CAAC,CAAG,EACV,EAAM,CAAC,CAAG,CACZ,CAEA,OAAO,CACT,EL3DmC,EAAQ,EACvC,CAAA,EAAS,KAAK,CAAG,ACwPd,SAA6B,CAAiC,EACnE,IAAM,EAAkB,EAAE,CAE1B,IAAK,IAAM,KAAa,EAAY,CAGlC,IAAK,IAAM,KAFX,EAAM,IAAI,CAAC,EAAgB,YAAa,IAEpB,EAAU,MAAM,EAGlC,IAAK,IAAM,KAFX,EAAM,IAAI,CAAC,EAAgB,QAAS,IAEhB,EAAM,MAAM,EAC9B,EAAM,IAAI,CAAC,EAAgB,QAAS,IAIxC,EAAM,IAAI,CAAC,GACb,CAEA,OAAO,EAAM,IAAI,CAAC,KACpB,ED1QyC,EACvC,CAAE,MAAO,EAAO,CACd,EAAS,EACX,CACF,EAEA,SAAS,IAAI,CAAC,gBAAgB,CAAC,WAAY,AAAC,GAAU,EAAM,cAAc,IAC1E,SAAS,IAAI,CAAC,gBAAgB,CAAC,OAAQ,AAAC,IACtC,IAAM,EAAQ,EAAM,YAAY,EAAE,MAElC,GAAI,CAAC,EACH,OAGF,EAAM,cAAc,GAEpB,IAAM,EAAgB,EAAE,CAExB,IAAK,IAAM,KAAQ,EAAO,CACxB,IAAM,EAAO,EAAK,SAAS,GAEvB,GACF,EAAM,IAAI,CAAC,EAEf,CAEA,EAAU,GACP,KAAK,CAAC,GACN,OAAO,CAAC,KACP,AAAA,EAAgB,EAClB,EACJ","sources":["<anon>","src/index.ts","src/boomsheets-animations.ts","node_modules/quote-unquote/index.js","src/file-loading.ts","src/input-sheets.ts","src/merge-sheets.ts","node_modules/bin-pack/index.js","node_modules/bin-pack/packer.growing.js","src/sheet-list-ui.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $cbdf17c3d09bc906$export$863d7ca51b416cee;\nvar $cbdf17c3d09bc906$export$7b3cbda67be88f5f;\nvar $cbdf17c3d09bc906$export$ee7a15c61bfdeb11;\nvar $cbdf17c3d09bc906$export$f0199846ca09d4f9;\nvar $cbdf17c3d09bc906$var$single = $cbdf17c3d09bc906$export$863d7ca51b416cee = function(s) {\n    return \"'\" + s.replace(/\\\\|'/g, function(m) {\n        return \"\\\\\" + m;\n    }) + \"'\";\n};\nvar $cbdf17c3d09bc906$var$double = $cbdf17c3d09bc906$export$7b3cbda67be88f5f = function(s) {\n    return '\"' + s.replace(/\\\\|\"/g, function(m) {\n        return \"\\\\\" + m;\n    }) + '\"';\n};\n$cbdf17c3d09bc906$export$ee7a15c61bfdeb11 = function(s) {\n    return /'/.test(s) ? $cbdf17c3d09bc906$var$double(s) : $cbdf17c3d09bc906$var$single(s);\n};\n$cbdf17c3d09bc906$export$f0199846ca09d4f9 = function(s) {\n    var quote = s[0];\n    var single = quote === \"'\";\n    return s.substring(1, s.length - 1).replace(/\\\\\\\\/g, \"\\\\\").replace(single ? /\\\\'/g : /\\\\\"/g, quote);\n};\n\n\nconst $fdfd340aa13d9aca$var$nonSpaceRegex = /\\S/g;\nconst $fdfd340aa13d9aca$var$keyEndRegex = /[\\s=]/g;\nfunction $fdfd340aa13d9aca$var$matchGRegexFrom(text, regex, index) {\n    regex.lastIndex = index;\n    return regex.exec(text);\n}\nfunction $fdfd340aa13d9aca$var$stringCharIsEscaped(text, index) {\n    let escaped = false;\n    while(index > 0){\n        index -= 1;\n        if (text[index] != \"\\\\\") break;\n        escaped = !escaped;\n    }\n    return escaped;\n}\nfunction $fdfd340aa13d9aca$var$findClosingQuote(text, index) {\n    // search for non escaped quote\n    while(true){\n        if ((index = text.indexOf('\"', index)) < 0) return -1;\n        if (!$fdfd340aa13d9aca$var$stringCharIsEscaped(text, index)) break;\n        index += 1;\n    }\n    return index;\n}\nfunction $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber) {\n    const attributes = {};\n    let index = line.indexOf(\" \");\n    if (index < 0) // no attributes\n    return attributes;\n    let match;\n    while(match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$nonSpaceRegex, index)){\n        index = match.index;\n        // find key end\n        match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$keyEndRegex, index);\n        if (!match) throw new Error(`Unexpected \"${line.slice(index)}\" on line ${lineNumber}`);\n        const key = line.slice(index, match.index);\n        // find \"=\"\n        const eqIndex = line.indexOf(\"=\", match.index);\n        if (eqIndex < 0) throw new Error(`Attribute is missing \"=\" on line ${lineNumber}`);\n        // find value start\n        match = $fdfd340aa13d9aca$var$matchGRegexFrom(line, $fdfd340aa13d9aca$var$nonSpaceRegex, eqIndex + 1);\n        if (!match) throw new Error(`Attribute is missing value on line ${lineNumber}`);\n        // find value end\n        let valueStart = match.index;\n        let value = \"\";\n        if (line[valueStart] == '\"') {\n            // quoted value\n            let valueEnd = $fdfd340aa13d9aca$var$findClosingQuote(line, valueStart + 1);\n            if (valueEnd < 0) throw new Error(`String missing closing quote on line ${lineNumber}`);\n            valueEnd += 1;\n            value = (0, $cbdf17c3d09bc906$export$f0199846ca09d4f9)(line.slice(valueStart, valueEnd));\n            index = valueEnd;\n        } else {\n            // no quotes\n            let valueEnd = line.indexOf(\" \", valueStart);\n            if (valueEnd < 0) valueEnd = line.length;\n            value = line.slice(valueStart, valueEnd);\n            index = valueEnd;\n        }\n        attributes[key] = value;\n    }\n    return attributes;\n}\nfunction $fdfd340aa13d9aca$export$f35c23e4edfee720(text) {\n    const animations = [];\n    let lineNumber = 0;\n    let currentAnimation;\n    let currentFrame;\n    for (let line of text.split(\"\\n\")){\n        line = line.trim();\n        lineNumber += 1;\n        if (line == \"\" || line.startsWith(\"#\") || line.startsWith(\"imagePath\") || line.startsWith(\"version\")) continue;\n        if (line.startsWith(\"animation \")) {\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            const animation = {\n                state: attributes.state,\n                frames: []\n            };\n            if (!attributes.state) throw new Error(`Animation is missing state name on line ${lineNumber}`);\n            animations.push(animation);\n            currentAnimation = animation;\n        } else if (line.startsWith(\"frame \") || line.startsWith(\"blank \")) {\n            if (!currentAnimation) throw new Error(`No animation state to associate frame with on line ${lineNumber}`);\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            const frame = {\n                x: parseFloat(attributes.x) || 0,\n                y: parseFloat(attributes.y) || 0,\n                w: parseFloat(attributes.w) || 0,\n                h: parseFloat(attributes.h) || 0,\n                originx: parseFloat(attributes.originx) || 0,\n                originy: parseFloat(attributes.originy) || 0,\n                flipx: parseInt(attributes.flipy) || 0,\n                flipy: parseInt(attributes.flipy) || 0,\n                duration: attributes.duration || \"\",\n                points: []\n            };\n            currentAnimation.frames.push(frame);\n            currentFrame = frame;\n        } else if (line.startsWith(\"point \")) {\n            if (!currentFrame) throw new Error(`No frame to associate point with on line ${lineNumber}`);\n            const attributes = $fdfd340aa13d9aca$var$parseAttributes(line, lineNumber);\n            if (!attributes.label) throw new Error(`Point is missing label on line ${lineNumber}`);\n            const point = {\n                label: attributes.label,\n                x: parseFloat(attributes.x),\n                y: parseFloat(attributes.y)\n            };\n            currentFrame.points.push(point);\n        } else {\n            const wordEnd = line.indexOf(\" \");\n            const word = wordEnd < 0 ? line : line.slice(0, wordEnd);\n            throw new Error(`Unexpected \"${word}\" on line ${lineNumber}`);\n        }\n    }\n    return animations;\n}\nfunction $fdfd340aa13d9aca$var$serializeObject(name, object) {\n    const text = [\n        name\n    ];\n    for(const key in object){\n        const value = object[key];\n        switch(typeof value){\n            case \"string\":\n                if (value != \"\") {\n                    text.push(\" \");\n                    text.push(key);\n                    text.push(\"=\");\n                    text.push((0, $cbdf17c3d09bc906$export$7b3cbda67be88f5f)(value));\n                }\n                break;\n            case \"number\":\n                if (value != 0) text.push(` ${key}=${value}`);\n                break;\n            case \"boolean\":\n                if (value == true) {\n                    text.push(\" \");\n                    text.push(key);\n                    text.push(\"=1\");\n                }\n                break;\n            case \"object\":\n                if (Array.isArray(value)) break;\n            default:\n                throw new Error(`Unexpected ${typeof value} for ${key}`);\n        }\n    }\n    return text.join(\"\");\n}\nfunction $fdfd340aa13d9aca$export$fa848666f543bc00(animations) {\n    const lines = [];\n    for (const animation of animations){\n        lines.push($fdfd340aa13d9aca$var$serializeObject(\"animation\", animation));\n        for (const frame of animation.frames){\n            lines.push($fdfd340aa13d9aca$var$serializeObject(\"frame\", frame));\n            for (const point of frame.points)lines.push($fdfd340aa13d9aca$var$serializeObject(\"point\", point));\n        }\n        lines.push(\"\");\n    }\n    return lines.join(\"\\n\");\n}\n\n\nfunction $a9cec9f5d2c68d09$export$cc0e7cb90ac4067f(file) {\n    return new Promise((resolve, reject)=>{\n        // load file as data url, then load as image\n        const reader = new FileReader();\n        reader.onload = function() {\n            // load image\n            const image = new Image();\n            image.src = reader.result;\n            image.onload = function() {\n                resolve(image);\n            };\n            image.onerror = function() {\n                reject(new Error(`Failed to load \"${file.name}\"`));\n            };\n        };\n        reader.onerror = function() {\n            reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n        };\n        reader.readAsDataURL(file);\n    });\n}\nfunction $a9cec9f5d2c68d09$export$b4f0996f721d43ec(file) {\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = function() {\n            resolve(reader.result);\n        };\n        reader.onerror = function() {\n            reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n        };\n        reader.readAsText(file);\n    });\n}\n\n\nclass $d56fe29905c32fe3$export$2e2bcd8739ae039 {\n    findOrInsert(name) {\n        let entry = this.sheets.find((data)=>data.name == name);\n        if (entry) return entry;\n        entry = {\n            name: name\n        };\n        this.sheets.push(entry);\n        return entry;\n    }\n    remove(name) {\n        const index = this.sheets.findIndex((data)=>data.name == name);\n        this.sheets.splice(index, 1);\n    }\n    constructor(){\n        this.sheets = [];\n    }\n}\n\n\nvar $7bcff58d1f5524c8$exports = {};\n\"use strict\";\nvar $06f5eb59911c96c0$exports = {};\n/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/ var $06f5eb59911c96c0$var$GrowingPacker = function() {};\n$06f5eb59911c96c0$var$GrowingPacker.prototype = {\n    fit: function(blocks) {\n        var n, node, block, len = blocks.length, fit;\n        var width = len > 0 ? blocks[0].width : 0;\n        var height = len > 0 ? blocks[0].height : 0;\n        this.root = {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        };\n        for(n = 0; n < len; n++){\n            block = blocks[n];\n            if (node = this.findNode(this.root, block.width, block.height)) {\n                fit = this.splitNode(node, block.width, block.height);\n                block.x = fit.x;\n                block.y = fit.y;\n            } else {\n                fit = this.growNode(block.width, block.height);\n                block.x = fit.x;\n                block.y = fit.y;\n            }\n        }\n    },\n    findNode: function(root, width, height) {\n        if (root.used) return this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n        else if (width <= root.width && height <= root.height) return root;\n        else return null;\n    },\n    splitNode: function(node, width, height) {\n        node.used = true;\n        node.down = {\n            x: node.x,\n            y: node.y + height,\n            width: node.width,\n            height: node.height - height\n        };\n        node.right = {\n            x: node.x + width,\n            y: node.y,\n            width: node.width - width,\n            height: height\n        };\n        return node;\n    },\n    growNode: function(width, height) {\n        var canGrowDown = width <= this.root.width;\n        var canGrowRight = height <= this.root.height;\n        var shouldGrowRight = canGrowRight && this.root.height >= this.root.width + width; // attempt to keep square-ish by growing right when height is much greater than width\n        var shouldGrowDown = canGrowDown && this.root.width >= this.root.height + height; // attempt to keep square-ish by growing down  when width  is much greater than height\n        if (shouldGrowRight) return this.growRight(width, height);\n        else if (shouldGrowDown) return this.growDown(width, height);\n        else if (canGrowRight) return this.growRight(width, height);\n        else if (canGrowDown) return this.growDown(width, height);\n        else return null; // need to ensure sensible root starting size to avoid this happening\n    },\n    growRight: function(width, height) {\n        this.root = {\n            used: true,\n            x: 0,\n            y: 0,\n            width: this.root.width + width,\n            height: this.root.height,\n            down: this.root,\n            right: {\n                x: this.root.width,\n                y: 0,\n                width: width,\n                height: this.root.height\n            }\n        };\n        var node;\n        if (node = this.findNode(this.root, width, height)) return this.splitNode(node, width, height);\n        else return null;\n    },\n    growDown: function(width, height) {\n        this.root = {\n            used: true,\n            x: 0,\n            y: 0,\n            width: this.root.width,\n            height: this.root.height + height,\n            down: {\n                x: 0,\n                y: this.root.height,\n                width: this.root.width,\n                height: height\n            },\n            right: this.root\n        };\n        var node;\n        if (node = this.findNode(this.root, width, height)) return this.splitNode(node, width, height);\n        else return null;\n    }\n};\n$06f5eb59911c96c0$exports = $06f5eb59911c96c0$var$GrowingPacker;\n\n\n$7bcff58d1f5524c8$exports = function(items, options) {\n    options = options || {};\n    var packer = new $06f5eb59911c96c0$exports();\n    var inPlace = options.inPlace || false;\n    // Clone the items.\n    var newItems = items.map(function(item) {\n        return inPlace ? item : {\n            width: item.width,\n            height: item.height,\n            item: item\n        };\n    });\n    newItems = newItems.sort(function(a, b) {\n        // TODO: check that each actually HAS a width and a height.\n        // Sort based on the size (area) of each block.\n        return b.width * b.height - a.width * a.height;\n    });\n    packer.fit(newItems);\n    var w = newItems.reduce(function(curr, item) {\n        return Math.max(curr, item.x + item.width);\n    }, 0);\n    var h = newItems.reduce(function(curr, item) {\n        return Math.max(curr, item.y + item.height);\n    }, 0);\n    var ret = {\n        width: w,\n        height: h\n    };\n    if (!inPlace) ret.items = newItems;\n    return ret;\n};\n\n\nconst $6954894cfc5c8565$var$padding = 1;\nfunction $6954894cfc5c8565$export$2e2bcd8739ae039(canvas, inputSheets) {\n    const animations = [];\n    const bins = [];\n    // clone animations into a single array and create bins\n    for (const sheet of inputSheets.sheets){\n        if (!sheet.animations || !sheet.image) continue;\n        const clonedSheetAnimations = structuredClone(sheet.animations);\n        animations.push(...clonedSheetAnimations);\n        for (const animation of clonedSheetAnimations)for (const frame of animation.frames)bins.push({\n            image: sheet.image,\n            frame: frame,\n            width: frame.w + $6954894cfc5c8565$var$padding * 2,\n            height: frame.h + $6954894cfc5c8565$var$padding * 2\n        });\n    }\n    // pack\n    const packResult = (0, (/*@__PURE__*/$parcel$interopDefault($7bcff58d1f5524c8$exports)))(bins);\n    // update frames and render\n    canvas.width = packResult.width;\n    canvas.height = packResult.height;\n    const ctx = canvas.getContext(\"2d\");\n    for (const item of packResult.items){\n        const frame = item.item.frame;\n        const destX = item.x + $6954894cfc5c8565$var$padding;\n        const destY = item.y + $6954894cfc5c8565$var$padding;\n        ctx.drawImage(item.item.image, frame.x, frame.y, frame.w, frame.h, destX, destY, frame.w, frame.h);\n        frame.x = destX;\n        frame.y = destY;\n    }\n    return animations;\n}\n\n\nconst $9e92fc4633178fef$var$listElement = document.getElementById(\"sheet-list\");\nfunction $9e92fc4633178fef$export$2f6a0a63782b48a(inputSheets) {\n    const itemTemplate = document.getElementById(\"sheet-list-item-template\");\n    $9e92fc4633178fef$var$listElement.textContent = \"\";\n    for (const entry of inputSheets.sheets){\n        const itemElement = itemTemplate.content.cloneNode(true);\n        // set name\n        const nameElement = itemElement.querySelector(\".sheet-name\");\n        nameElement.innerText = entry.name;\n        // set error\n        if (!entry.image || !entry.animations) {\n            const errorElement = itemElement.querySelector(\".error-text\");\n            if (entry.animationError) errorElement.innerText = entry.animationError;\n            else if (entry.imageError) errorElement.innerText = entry.imageError;\n            else if (!entry.animations) errorElement.innerText = \"Missing .animation file\";\n            else if (!entry.image) errorElement.innerText = \"Missing image file\";\n        }\n        // remove handler\n        const removeEntryElement = itemElement.querySelector(\".remove-file-button\");\n        removeEntryElement.onclick = function() {\n            inputSheets.remove(entry.name);\n            $9e92fc4633178fef$export$2f6a0a63782b48a(inputSheets);\n        };\n        // append\n        $9e92fc4633178fef$var$listElement.appendChild(itemElement);\n    }\n}\n\n\nconst $b4e14b6b8da86996$var$inputSheets = new (0, $d56fe29905c32fe3$export$2e2bcd8739ae039)();\nfunction $b4e14b6b8da86996$var$logError(error) {\n    console.error(error);\n    alert(error);\n}\ndocument.getElementById(\"clear-button\").onclick = function() {\n    $b4e14b6b8da86996$var$inputSheets.sheets = [];\n    (0, $9e92fc4633178fef$export$2f6a0a63782b48a)($b4e14b6b8da86996$var$inputSheets);\n};\ndocument.getElementById(\"merge-button\").onclick = function() {\n    const canvas = document.querySelector(\"#output canvas\");\n    const textarea = document.querySelector(\"#output textarea\");\n    try {\n        const animations = (0, $6954894cfc5c8565$export$2e2bcd8739ae039)(canvas, $b4e14b6b8da86996$var$inputSheets);\n        textarea.value = (0, $fdfd340aa13d9aca$export$fa848666f543bc00)(animations);\n    } catch (error) {\n        $b4e14b6b8da86996$var$logError(error);\n    }\n};\ndocument.body.addEventListener(\"dragover\", (event)=>event.preventDefault());\ndocument.body.addEventListener(\"drop\", (event)=>{\n    const items = event.dataTransfer?.items;\n    if (!items) return;\n    event.preventDefault();\n    const files = [];\n    for (const item of items){\n        const file = item.getAsFile();\n        if (file) files.push(file);\n    }\n    $b4e14b6b8da86996$var$loadFiles(files).catch($b4e14b6b8da86996$var$logError).finally(()=>{\n        (0, $9e92fc4633178fef$export$2f6a0a63782b48a)($b4e14b6b8da86996$var$inputSheets);\n    });\n});\nfunction $b4e14b6b8da86996$var$baseName(name) {\n    return name.slice(0, name.lastIndexOf(\".\"));\n}\nasync function $b4e14b6b8da86996$var$loadFiles(files) {\n    for (const file of files){\n        const name = $b4e14b6b8da86996$var$baseName(file.name);\n        const entry = $b4e14b6b8da86996$var$inputSheets.findOrInsert(name);\n        if (file.name.endsWith(\".png\")) try {\n            entry.image = await (0, $a9cec9f5d2c68d09$export$cc0e7cb90ac4067f)(file);\n            entry.imageError = undefined;\n        } catch (error) {\n            console.error(error);\n            entry.imageError = error.toString();\n        }\n        else if (file.name.endsWith(\".animation\")) try {\n            const text = await (0, $a9cec9f5d2c68d09$export$b4f0996f721d43ec)(file);\n            entry.animations = (0, $fdfd340aa13d9aca$export$f35c23e4edfee720)(text);\n            entry.animationError = undefined;\n        } catch (error) {\n            console.error(error);\n            entry.animationError = error.toString();\n        }\n    }\n}\n\n\n//# sourceMappingURL=index.9ca73d00.js.map\n","import {\n  parseAnimationsText,\n  serializeAnimations,\n} from \"./boomsheets-animations\";\nimport { loadImageFile, loadTextFile } from \"./file-loading\";\nimport InputSheets from \"./input-sheets\";\nimport mergeSheets from \"./merge-sheets\";\nimport { updateSheetList } from \"./sheet-list-ui\";\n\nconst inputSheets = new InputSheets();\n\nfunction logError(error) {\n  console.error(error);\n  alert(error);\n}\n\ndocument.getElementById(\"clear-button\")!.onclick = function () {\n  inputSheets.sheets = [];\n  updateSheetList(inputSheets);\n};\n\ndocument.getElementById(\"merge-button\")!.onclick = function () {\n  const canvas = document.querySelector(\"#output canvas\") as HTMLCanvasElement;\n  const textarea = document.querySelector(\n    \"#output textarea\"\n  ) as HTMLTextAreaElement;\n\n  try {\n    const animations = mergeSheets(canvas, inputSheets);\n    textarea.value = serializeAnimations(animations);\n  } catch (error) {\n    logError(error);\n  }\n};\n\ndocument.body.addEventListener(\"dragover\", (event) => event.preventDefault());\ndocument.body.addEventListener(\"drop\", (event) => {\n  const items = event.dataTransfer?.items;\n\n  if (!items) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const files: File[] = [];\n\n  for (const item of items) {\n    const file = item.getAsFile();\n\n    if (file) {\n      files.push(file);\n    }\n  }\n\n  loadFiles(files)\n    .catch(logError)\n    .finally(() => {\n      updateSheetList(inputSheets);\n    });\n});\n\nfunction baseName(name: string) {\n  return name.slice(0, name.lastIndexOf(\".\"));\n}\n\nasync function loadFiles(files: File[]) {\n  for (const file of files) {\n    const name = baseName(file.name);\n    const entry = inputSheets.findOrInsert(name);\n\n    if (file.name.endsWith(\".png\")) {\n      try {\n        entry.image = await loadImageFile(file);\n        entry.imageError = undefined;\n      } catch (error) {\n        console.error(error);\n        entry.imageError = error!.toString();\n      }\n    } else if (file.name.endsWith(\".animation\")) {\n      try {\n        const text = await loadTextFile(file);\n\n        entry.animations = parseAnimationsText(text);\n        entry.animationError = undefined;\n      } catch (error) {\n        console.error(error);\n        entry.animationError = error!.toString();\n      }\n    }\n  }\n}\n","import { double as quote, unquote } from \"quote-unquote\";\n\nexport type BoomSheetsPoint = {\n  label: string;\n  x: number;\n  y: number;\n};\n\nexport type BoomSheetsFrame = {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  originx: number;\n  originy: number;\n  flipx: number;\n  flipy: number;\n  duration: string;\n  points: BoomSheetsPoint[];\n};\n\nexport type BoomSheetsAnimation = {\n  state: string;\n  frames: BoomSheetsFrame[];\n};\n\ntype Attributes = { [key: string]: string };\nconst nonSpaceRegex = /\\S/g;\nconst keyEndRegex = /[\\s=]/g;\n\nfunction matchGRegexFrom(\n  text: string,\n  regex: RegExp,\n  index: number\n): RegExpMatchArray | null {\n  regex.lastIndex = index;\n  return regex.exec(text);\n}\n\nfunction stringCharIsEscaped(text: string, index: number): boolean {\n  let escaped = false;\n\n  while (index > 0) {\n    index -= 1;\n\n    if (text[index] != \"\\\\\") {\n      break;\n    }\n\n    escaped = !escaped;\n  }\n\n  return escaped;\n}\n\nfunction findClosingQuote(text: string, index: number): number {\n  // search for non escaped quote\n  while (true) {\n    if ((index = text.indexOf('\"', index)) < 0) {\n      return -1;\n    }\n\n    if (!stringCharIsEscaped(text, index)) {\n      break;\n    }\n\n    index += 1;\n  }\n\n  return index;\n}\n\nfunction parseAttributes(line: string, lineNumber: number): Attributes {\n  const attributes: Attributes = {};\n\n  let index = line.indexOf(\" \");\n\n  if (index < 0) {\n    // no attributes\n    return attributes;\n  }\n\n  let match: RegExpMatchArray | null;\n\n  while ((match = matchGRegexFrom(line, nonSpaceRegex, index))) {\n    index = match.index!;\n\n    // find key end\n    match = matchGRegexFrom(line, keyEndRegex, index);\n\n    if (!match) {\n      throw new Error(\n        `Unexpected \"${line.slice(index)}\" on line ${lineNumber}`\n      );\n    }\n\n    const key = line.slice(index, match.index!);\n\n    // find \"=\"\n    const eqIndex = line.indexOf(\"=\", match.index);\n\n    if (eqIndex < 0) {\n      throw new Error(`Attribute is missing \"=\" on line ${lineNumber}`);\n    }\n\n    // find value start\n    match = matchGRegexFrom(line, nonSpaceRegex, eqIndex + 1);\n\n    if (!match) {\n      throw new Error(`Attribute is missing value on line ${lineNumber}`);\n    }\n\n    // find value end\n    let valueStart = match.index!;\n    let value = \"\";\n\n    if (line[valueStart] == '\"') {\n      // quoted value\n      let valueEnd = findClosingQuote(line, valueStart + 1);\n\n      if (valueEnd < 0) {\n        throw new Error(`String missing closing quote on line ${lineNumber}`);\n      }\n\n      valueEnd += 1;\n\n      value = unquote(line.slice(valueStart, valueEnd));\n      index = valueEnd;\n    } else {\n      // no quotes\n      let valueEnd = line.indexOf(\" \", valueStart);\n\n      if (valueEnd < 0) {\n        valueEnd = line.length;\n      }\n\n      value = line.slice(valueStart, valueEnd);\n      index = valueEnd;\n    }\n\n    attributes[key] = value;\n  }\n\n  return attributes;\n}\n\nexport function parseAnimationsText(text: string): BoomSheetsAnimation[] {\n  const animations: BoomSheetsAnimation[] = [];\n\n  let lineNumber = 0;\n  let currentAnimation: BoomSheetsAnimation | undefined;\n  let currentFrame: BoomSheetsFrame | undefined;\n\n  for (let line of text.split(\"\\n\")) {\n    line = line.trim();\n    lineNumber += 1;\n\n    if (\n      line == \"\" ||\n      line.startsWith(\"#\") ||\n      line.startsWith(\"imagePath\") ||\n      line.startsWith(\"version\")\n    ) {\n      // skip\n      continue;\n    }\n\n    if (line.startsWith(\"animation \")) {\n      const attributes = parseAttributes(line, lineNumber);\n\n      const animation: BoomSheetsAnimation = {\n        state: attributes.state,\n        frames: [],\n      };\n\n      if (!attributes.state) {\n        throw new Error(\n          `Animation is missing state name on line ${lineNumber}`\n        );\n      }\n\n      animations.push(animation);\n      currentAnimation = animation;\n    } else if (line.startsWith(\"frame \") || line.startsWith(\"blank \")) {\n      if (!currentAnimation) {\n        throw new Error(\n          `No animation state to associate frame with on line ${lineNumber}`\n        );\n      }\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      const frame: BoomSheetsFrame = {\n        x: parseFloat(attributes.x) || 0,\n        y: parseFloat(attributes.y) || 0,\n        w: parseFloat(attributes.w) || 0,\n        h: parseFloat(attributes.h) || 0,\n        originx: parseFloat(attributes.originx) || 0,\n        originy: parseFloat(attributes.originy) || 0,\n        flipx: parseInt(attributes.flipy) || 0,\n        flipy: parseInt(attributes.flipy) || 0,\n        duration: attributes.duration || \"\",\n        points: [],\n      };\n\n      currentAnimation.frames.push(frame);\n      currentFrame = frame;\n    } else if (line.startsWith(\"point \")) {\n      if (!currentFrame) {\n        throw new Error(\n          `No frame to associate point with on line ${lineNumber}`\n        );\n      }\n\n      const attributes = parseAttributes(line, lineNumber);\n\n      if (!attributes.label) {\n        throw new Error(`Point is missing label on line ${lineNumber}`);\n      }\n\n      const point: BoomSheetsPoint = {\n        label: attributes.label,\n        x: parseFloat(attributes.x),\n        y: parseFloat(attributes.y),\n      };\n\n      currentFrame.points.push(point);\n    } else {\n      const wordEnd = line.indexOf(\" \");\n      const word = wordEnd < 0 ? line : line.slice(0, wordEnd);\n      throw new Error(`Unexpected \"${word}\" on line ${lineNumber}`);\n    }\n  }\n\n  return animations;\n}\n\nfunction serializeObject(name: string, object: Object): string {\n  const text: string[] = [name];\n\n  for (const key in object) {\n    const value = object[key];\n\n    switch (typeof value) {\n      case \"string\":\n        if (value != \"\") {\n          text.push(\" \");\n          text.push(key);\n          text.push(\"=\");\n          text.push(quote(value));\n        }\n        break;\n      case \"number\":\n        if (value != 0) {\n          text.push(` ${key}=${value}`);\n        }\n        break;\n      case \"boolean\":\n        if (value == true) {\n          text.push(\" \");\n          text.push(key);\n          text.push(\"=1\");\n        }\n        break;\n      case \"object\":\n        if (Array.isArray(value)) {\n          // fall through to error if the value is not an array\n          break;\n        }\n      default:\n        throw new Error(`Unexpected ${typeof value} for ${key}`);\n    }\n  }\n\n  return text.join(\"\");\n}\n\nexport function serializeAnimations(animations: BoomSheetsAnimation[]): string {\n  const lines: string[] = [];\n\n  for (const animation of animations) {\n    lines.push(serializeObject(\"animation\", animation));\n\n    for (const frame of animation.frames) {\n      lines.push(serializeObject(\"frame\", frame));\n\n      for (const point of frame.points) {\n        lines.push(serializeObject(\"point\", point));\n      }\n    }\n\n    lines.push(\"\");\n  }\n\n  return lines.join(\"\\n\");\n}\n","\nvar single = exports.single = function (s) {\n  return \"'\" + s.replace(/\\\\|'/g, function (m) { return '\\\\'+m })+\"'\"\n}\n\nvar double = exports.double = function (s) {\n  return '\"' + s.replace(/\\\\|\"/g, function (m) { return '\\\\'+m })+'\"'\n}\n\nexports.quote = function (s) {\n  return  /'/.test(s) ? double(s) : single(s)\n}\n\nexports.unquote = function (s) {\n  var quote = s[0]\n  var single = quote === \"'\"\n  return s.substring(1, s.length - 1)\n      .replace(/\\\\\\\\/g, '\\\\')\n      .replace(single ? /\\\\'/g : /\\\\\"/g, quote)\n}\n\n","export function loadImageFile(file: File): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    // load file as data url, then load as image\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      // load image\n      const image = new Image();\n\n      image.src = reader.result as string;\n\n      image.onload = function () {\n        resolve(image);\n      };\n\n      image.onerror = function () {\n        reject(new Error(`Failed to load \"${file.name}\"`));\n      };\n    };\n\n    reader.onerror = function () {\n      reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n    };\n\n    reader.readAsDataURL(file);\n  });\n}\n\nexport function loadTextFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      resolve(reader.result as string);\n    };\n\n    reader.onerror = function () {\n      reject(new Error(`Failed to load \"${file.name}: ${reader.error}\"`));\n    };\n\n    reader.readAsText(file);\n  });\n}\n","import { BoomSheetsAnimation } from \"./boomsheets-animations\";\n\nexport type InputSheet = {\n  name: string;\n  image?: HTMLImageElement;\n  imageError?: string;\n  animations?: BoomSheetsAnimation[];\n  animationError?: string;\n};\n\nexport default class InputSheets {\n  sheets: InputSheet[] = [];\n\n  findOrInsert(name: string) {\n    let entry = this.sheets.find((data) => data.name == name);\n\n    if (entry) {\n      return entry;\n    }\n\n    entry = { name };\n    this.sheets.push(entry);\n\n    return entry;\n  }\n\n  remove(name: string) {\n    const index = this.sheets.findIndex((data) => data.name == name);\n    this.sheets.splice(index, 1);\n  }\n}\n","import binPack from \"bin-pack\";\nimport { BoomSheetsAnimation, BoomSheetsFrame } from \"./boomsheets-animations\";\nimport InputSheets from \"./input-sheets\";\n\ntype BinPackItem<Item> = {\n  x: number; // x coordinate of the packed box\n  y: number; // y coordinate of the packed box\n  width: number; // width of the packed box\n  height: number; // height of the packed box\n  item: Item; // original object that was passed in\n};\n\ntype BinPackResult<Item> = {\n  width: number; // width of the containing box\n  height: number; // height of the containing box\n  items: BinPackItem<Item>[]; // packed items\n};\n\ntype FrameBin = {\n  image: HTMLImageElement;\n  frame: BoomSheetsFrame;\n  width: number;\n  height: number;\n};\n\nconst padding = 1;\n\nexport default function mergeSheets(\n  canvas: HTMLCanvasElement,\n  inputSheets: InputSheets\n): BoomSheetsAnimation[] {\n  const animations: BoomSheetsAnimation[] = [];\n  const bins: FrameBin[] = [];\n\n  // clone animations into a single array and create bins\n  for (const sheet of inputSheets.sheets) {\n    if (!sheet.animations || !sheet.image) {\n      continue;\n    }\n\n    const clonedSheetAnimations = structuredClone(sheet.animations);\n    animations.push(...clonedSheetAnimations);\n\n    for (const animation of clonedSheetAnimations) {\n      for (const frame of animation.frames) {\n        bins.push({\n          image: sheet.image,\n          frame,\n          width: frame.w + padding * 2,\n          height: frame.h + padding * 2,\n        });\n      }\n    }\n  }\n\n  // pack\n  const packResult = binPack(bins) as BinPackResult<FrameBin>;\n\n  // update frames and render\n  canvas.width = packResult.width;\n  canvas.height = packResult.height;\n\n  const ctx = canvas.getContext(\"2d\")!;\n\n  for (const item of packResult.items) {\n    const frame = item.item.frame;\n\n    const destX = item.x + padding;\n    const destY = item.y + padding;\n\n    ctx.drawImage(\n      item.item.image,\n      frame.x,\n      frame.y,\n      frame.w,\n      frame.h,\n      destX,\n      destY,\n      frame.w,\n      frame.h\n    );\n\n    frame.x = destX;\n    frame.y = destY;\n  }\n\n  return animations;\n}\n","\"use strict\";\n\nvar GrowingPacker = require('./packer.growing.js');\n\nmodule.exports = function(items, options) {\n\toptions = options || {};\n\tvar packer = new GrowingPacker();\n\tvar inPlace = options.inPlace || false;\n\n\t// Clone the items.\n\tvar newItems = items.map(function(item) { return inPlace ? item : { width: item.width, height: item.height, item: item }; });\n\n\tnewItems = newItems.sort(function(a, b) {\n\t\t// TODO: check that each actually HAS a width and a height.\n\t\t// Sort based on the size (area) of each block.\n\t\treturn (b.width * b.height) - (a.width * a.height);\n\t});\n\n\tpacker.fit(newItems);\n\n\tvar w = newItems.reduce(function(curr, item) { return Math.max(curr, item.x + item.width); }, 0);\n\tvar h = newItems.reduce(function(curr, item) { return Math.max(curr, item.y + item.height); }, 0);\n\n\tvar ret = {\n\t\twidth: w,\n\t\theight: h\n\t};\n\n\tif (!inPlace) {\n\t\tret.items = newItems;\n\t}\n\n\treturn ret;\n};\n","/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/\n\nvar GrowingPacker = function() { };\n\nGrowingPacker.prototype = {\n\n\tfit: function(blocks) {\n\t\tvar n, node, block, len = blocks.length, fit;\n\t\tvar width  = len > 0 ? blocks[0].width : 0;\n\t\tvar height = len > 0 ? blocks[0].height : 0;\n\t\tthis.root = { x: 0, y: 0, width: width, height: height };\n\t\tfor (n = 0; n < len ; n++) {\n\t\t\tblock = blocks[n];\n\t\t\tif (node = this.findNode(this.root, block.width, block.height)) {\n\t\t\t\tfit = this.splitNode(node, block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfit = this.growNode(block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tfindNode: function(root, width, height) {\n\t\tif (root.used)\n\t\t\treturn this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n\t\telse if ((width <= root.width) && (height <= root.height))\n\t\t\treturn root;\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tsplitNode: function(node, width, height) {\n\t\tnode.used = true;\n\t\tnode.down  = { x: node.x,         y: node.y + height, width: node.width,         height: node.height - height };\n\t\tnode.right = { x: node.x + width, y: node.y,          width: node.width - width, height: height               };\n\t\treturn node;\n\t},\n\n\tgrowNode: function(width, height) {\n\t\tvar canGrowDown  = (width  <= this.root.width);\n\t\tvar canGrowRight = (height <= this.root.height);\n\n\t\tvar shouldGrowRight = canGrowRight && (this.root.height >= (this.root.width  + width )); // attempt to keep square-ish by growing right when height is much greater than width\n\t\tvar shouldGrowDown  = canGrowDown  && (this.root.width  >= (this.root.height + height)); // attempt to keep square-ish by growing down  when width  is much greater than height\n\n\t\tif (shouldGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (shouldGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse if (canGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (canGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse\n\t\t\treturn null; // need to ensure sensible root starting size to avoid this happening\n\t},\n\n\tgrowRight: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width + width,\n\t\t\theight: this.root.height,\n\t\t\tdown: this.root,\n\t\t\tright: { x: this.root.width, y: 0, width: width, height: this.root.height }\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tgrowDown: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width,\n\t\t\theight: this.root.height + height,\n\t\t\tdown:  { x: 0, y: this.root.height, width: this.root.width, height: height },\n\t\t\tright: this.root\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t}\n\n};\n\nmodule.exports = GrowingPacker;\n\n","import InputSheets from \"./input-sheets\";\n\nconst listElement = document.getElementById(\"sheet-list\")!;\n\nexport function updateSheetList(inputSheets: InputSheets) {\n  const itemTemplate = document.getElementById(\n    \"sheet-list-item-template\"\n  ) as HTMLTemplateElement;\n\n  listElement.textContent = \"\";\n\n  for (const entry of inputSheets.sheets) {\n    const itemElement = itemTemplate.content.cloneNode(true) as HTMLElement;\n\n    // set name\n    const nameElement = itemElement.querySelector(\n      \".sheet-name\"\n    )! as HTMLElement;\n    nameElement.innerText = entry.name;\n\n    // set error\n    if (!entry.image || !entry.animations) {\n      const errorElement = itemElement.querySelector(\n        \".error-text\"\n      )! as HTMLElement;\n\n      if (entry.animationError) {\n        errorElement.innerText = entry.animationError;\n      } else if (entry.imageError) {\n        errorElement.innerText = entry.imageError;\n      } else if (!entry.animations) {\n        errorElement.innerText = \"Missing .animation file\";\n      } else if (!entry.image) {\n        errorElement.innerText = \"Missing image file\";\n      }\n    }\n\n    // remove handler\n    const removeEntryElement = itemElement.querySelector(\n      \".remove-file-button\"\n    )! as HTMLElement;\n    removeEntryElement.onclick = function () {\n      inputSheets.remove(entry.name);\n      updateSheetList(inputSheets);\n    };\n\n    // append\n    listElement.appendChild(itemElement);\n  }\n}\n"],"names":["$cbdf17c3d09bc906$export$f0199846ca09d4f9","s","quote","single","substring","length","replace","$fdfd340aa13d9aca$var$nonSpaceRegex","$fdfd340aa13d9aca$var$keyEndRegex","$fdfd340aa13d9aca$var$matchGRegexFrom","text","regex","index","lastIndex","exec","$fdfd340aa13d9aca$var$parseAttributes","line","lineNumber","match","attributes","indexOf","Error","slice","key","eqIndex","valueStart","value","valueEnd","$fdfd340aa13d9aca$var$findClosingQuote","$fdfd340aa13d9aca$var$stringCharIsEscaped","escaped","$fdfd340aa13d9aca$var$serializeObject","name","object","push","m","Array","isArray","join","$7bcff58d1f5524c8$exports","$06f5eb59911c96c0$exports","$06f5eb59911c96c0$var$GrowingPacker","prototype","fit","blocks","n","node","block","len","width","height","root","x","y","findNode","splitNode","growNode","used","right","down","canGrowDown","canGrowRight","shouldGrowRight","shouldGrowDown","growRight","growDown","items","options","packer","inPlace","newItems","map","item","sort","a","b","ret","reduce","curr","Math","max","$9e92fc4633178fef$var$listElement","document","getElementById","$9e92fc4633178fef$export$2f6a0a63782b48a","inputSheets","itemTemplate","entry","textContent","sheets","itemElement","content","cloneNode","nameElement","querySelector","innerText","image","animations","errorElement","animationError","imageError","removeEntryElement","onclick","remove","appendChild","$b4e14b6b8da86996$var$inputSheets","findOrInsert","find","data","findIndex","splice","constructor","$b4e14b6b8da86996$var$logError","error","console","alert","$b4e14b6b8da86996$var$loadFiles","files","file","lastIndexOf","endsWith","Promise","resolve","reject","reader","FileReader","onload","Image","src","result","onerror","readAsDataURL","undefined","toString","readAsText","currentAnimation","currentFrame","split","trim","startsWith","animation","state","frames","frame","parseFloat","w","h","originx","originy","flipx","parseInt","flipy","duration","points","label","point","wordEnd","word","canvas","textarea","bins","sheet","clonedSheetAnimations","structuredClone","$6954894cfc5c8565$var$padding","packResult","__esModule","default","ctx","getContext","destX","destY","drawImage","lines","body","addEventListener","event","preventDefault","dataTransfer","getAsFile","catch","finally"],"version":3,"file":"index.9ca73d00.js.map"}